// Code generated by MockGen. DO NOT EDIT.
// Source: C:\Users\benrc\go\src\github.com\workload-driver-react\driver-backend\internal\domain\session.go
//
// Generated by this command:
//
//	mockgen -source C:\Users\benrc\go\src\github.com\workload-driver-react\driver-backend\internal\domain\session.go -package mock_domain -destination C:\Users\benrc\go\src\github.com\workload-driver-react\driver-backend\internal\mock_domain\session.go
//

// Package mock_domain is a generated GoMock package.
package mock_domain

import (
	reflect "reflect"

	gomock "go.uber.org/mock/gomock"
)

// MockSessionMetadata is a mock of SessionMetadata interface.
type MockSessionMetadata struct {
	ctrl     *gomock.Controller
	recorder *MockSessionMetadataMockRecorder
	isgomock struct{}
}

// MockSessionMetadataMockRecorder is the mock recorder for MockSessionMetadata.
type MockSessionMetadataMockRecorder struct {
	mock *MockSessionMetadata
}

// NewMockSessionMetadata creates a new mock instance.
func NewMockSessionMetadata(ctrl *gomock.Controller) *MockSessionMetadata {
	mock := &MockSessionMetadata{ctrl: ctrl}
	mock.recorder = &MockSessionMetadataMockRecorder{mock}
	return mock
}

// EXPECT returns an object that allows the caller to indicate expected use.
func (m *MockSessionMetadata) EXPECT() *MockSessionMetadataMockRecorder {
	return m.recorder
}

// GetCpuUtilization mocks base method.
func (m *MockSessionMetadata) GetCpuUtilization() float64 {
	m.ctrl.T.Helper()
	ret := m.ctrl.Call(m, "GetCpuUtilization")
	ret0, _ := ret[0].(float64)
	return ret0
}

// GetCpuUtilization indicates an expected call of GetCpuUtilization.
func (mr *MockSessionMetadataMockRecorder) GetCpuUtilization() *gomock.Call {
	mr.mock.ctrl.T.Helper()
	return mr.mock.ctrl.RecordCallWithMethodType(mr.mock, "GetCpuUtilization", reflect.TypeOf((*MockSessionMetadata)(nil).GetCpuUtilization))
}

// GetCurrentTrainingMaxCPUs mocks base method.
func (m *MockSessionMetadata) GetCurrentTrainingMaxCPUs() float64 {
	m.ctrl.T.Helper()
	ret := m.ctrl.Call(m, "GetCurrentTrainingMaxCPUs")
	ret0, _ := ret[0].(float64)
	return ret0
}

// GetCurrentTrainingMaxCPUs indicates an expected call of GetCurrentTrainingMaxCPUs.
func (mr *MockSessionMetadataMockRecorder) GetCurrentTrainingMaxCPUs() *gomock.Call {
	mr.mock.ctrl.T.Helper()
	return mr.mock.ctrl.RecordCallWithMethodType(mr.mock, "GetCurrentTrainingMaxCPUs", reflect.TypeOf((*MockSessionMetadata)(nil).GetCurrentTrainingMaxCPUs))
}

// GetCurrentTrainingMaxGPUs mocks base method.
func (m *MockSessionMetadata) GetCurrentTrainingMaxGPUs() int {
	m.ctrl.T.Helper()
	ret := m.ctrl.Call(m, "GetCurrentTrainingMaxGPUs")
	ret0, _ := ret[0].(int)
	return ret0
}

// GetCurrentTrainingMaxGPUs indicates an expected call of GetCurrentTrainingMaxGPUs.
func (mr *MockSessionMetadataMockRecorder) GetCurrentTrainingMaxGPUs() *gomock.Call {
	mr.mock.ctrl.T.Helper()
	return mr.mock.ctrl.RecordCallWithMethodType(mr.mock, "GetCurrentTrainingMaxGPUs", reflect.TypeOf((*MockSessionMetadata)(nil).GetCurrentTrainingMaxGPUs))
}

// GetCurrentTrainingMaxMemory mocks base method.
func (m *MockSessionMetadata) GetCurrentTrainingMaxMemory() float64 {
	m.ctrl.T.Helper()
	ret := m.ctrl.Call(m, "GetCurrentTrainingMaxMemory")
	ret0, _ := ret[0].(float64)
	return ret0
}

// GetCurrentTrainingMaxMemory indicates an expected call of GetCurrentTrainingMaxMemory.
func (mr *MockSessionMetadataMockRecorder) GetCurrentTrainingMaxMemory() *gomock.Call {
	mr.mock.ctrl.T.Helper()
	return mr.mock.ctrl.RecordCallWithMethodType(mr.mock, "GetCurrentTrainingMaxMemory", reflect.TypeOf((*MockSessionMetadata)(nil).GetCurrentTrainingMaxMemory))
}

// GetCurrentTrainingMaxVRAM mocks base method.
func (m *MockSessionMetadata) GetCurrentTrainingMaxVRAM() float64 {
	m.ctrl.T.Helper()
	ret := m.ctrl.Call(m, "GetCurrentTrainingMaxVRAM")
	ret0, _ := ret[0].(float64)
	return ret0
}

// GetCurrentTrainingMaxVRAM indicates an expected call of GetCurrentTrainingMaxVRAM.
func (mr *MockSessionMetadataMockRecorder) GetCurrentTrainingMaxVRAM() *gomock.Call {
	mr.mock.ctrl.T.Helper()
	return mr.mock.ctrl.RecordCallWithMethodType(mr.mock, "GetCurrentTrainingMaxVRAM", reflect.TypeOf((*MockSessionMetadata)(nil).GetCurrentTrainingMaxVRAM))
}

// GetGPUs mocks base method.
func (m *MockSessionMetadata) GetGPUs() int {
	m.ctrl.T.Helper()
	ret := m.ctrl.Call(m, "GetGPUs")
	ret0, _ := ret[0].(int)
	return ret0
}

// GetGPUs indicates an expected call of GetGPUs.
func (mr *MockSessionMetadataMockRecorder) GetGPUs() *gomock.Call {
	mr.mock.ctrl.T.Helper()
	return mr.mock.ctrl.RecordCallWithMethodType(mr.mock, "GetGPUs", reflect.TypeOf((*MockSessionMetadata)(nil).GetGPUs))
}

// GetGpuUtilization mocks base method.
func (m *MockSessionMetadata) GetGpuUtilization() float64 {
	m.ctrl.T.Helper()
	ret := m.ctrl.Call(m, "GetGpuUtilization")
	ret0, _ := ret[0].(float64)
	return ret0
}

// GetGpuUtilization indicates an expected call of GetGpuUtilization.
func (mr *MockSessionMetadataMockRecorder) GetGpuUtilization() *gomock.Call {
	mr.mock.ctrl.T.Helper()
	return mr.mock.ctrl.RecordCallWithMethodType(mr.mock, "GetGpuUtilization", reflect.TypeOf((*MockSessionMetadata)(nil).GetGpuUtilization))
}

// GetMaxSessionCPUs mocks base method.
func (m *MockSessionMetadata) GetMaxSessionCPUs() float64 {
	m.ctrl.T.Helper()
	ret := m.ctrl.Call(m, "GetMaxSessionCPUs")
	ret0, _ := ret[0].(float64)
	return ret0
}

// GetMaxSessionCPUs indicates an expected call of GetMaxSessionCPUs.
func (mr *MockSessionMetadataMockRecorder) GetMaxSessionCPUs() *gomock.Call {
	mr.mock.ctrl.T.Helper()
	return mr.mock.ctrl.RecordCallWithMethodType(mr.mock, "GetMaxSessionCPUs", reflect.TypeOf((*MockSessionMetadata)(nil).GetMaxSessionCPUs))
}

// GetMaxSessionGPUs mocks base method.
func (m *MockSessionMetadata) GetMaxSessionGPUs() int {
	m.ctrl.T.Helper()
	ret := m.ctrl.Call(m, "GetMaxSessionGPUs")
	ret0, _ := ret[0].(int)
	return ret0
}

// GetMaxSessionGPUs indicates an expected call of GetMaxSessionGPUs.
func (mr *MockSessionMetadataMockRecorder) GetMaxSessionGPUs() *gomock.Call {
	mr.mock.ctrl.T.Helper()
	return mr.mock.ctrl.RecordCallWithMethodType(mr.mock, "GetMaxSessionGPUs", reflect.TypeOf((*MockSessionMetadata)(nil).GetMaxSessionGPUs))
}

// GetMaxSessionMemory mocks base method.
func (m *MockSessionMetadata) GetMaxSessionMemory() float64 {
	m.ctrl.T.Helper()
	ret := m.ctrl.Call(m, "GetMaxSessionMemory")
	ret0, _ := ret[0].(float64)
	return ret0
}

// GetMaxSessionMemory indicates an expected call of GetMaxSessionMemory.
func (mr *MockSessionMetadataMockRecorder) GetMaxSessionMemory() *gomock.Call {
	mr.mock.ctrl.T.Helper()
	return mr.mock.ctrl.RecordCallWithMethodType(mr.mock, "GetMaxSessionMemory", reflect.TypeOf((*MockSessionMetadata)(nil).GetMaxSessionMemory))
}

// GetMaxSessionVRAM mocks base method.
func (m *MockSessionMetadata) GetMaxSessionVRAM() float64 {
	m.ctrl.T.Helper()
	ret := m.ctrl.Call(m, "GetMaxSessionVRAM")
	ret0, _ := ret[0].(float64)
	return ret0
}

// GetMaxSessionVRAM indicates an expected call of GetMaxSessionVRAM.
func (mr *MockSessionMetadataMockRecorder) GetMaxSessionVRAM() *gomock.Call {
	mr.mock.ctrl.T.Helper()
	return mr.mock.ctrl.RecordCallWithMethodType(mr.mock, "GetMaxSessionVRAM", reflect.TypeOf((*MockSessionMetadata)(nil).GetMaxSessionVRAM))
}

// GetMemoryUtilization mocks base method.
func (m *MockSessionMetadata) GetMemoryUtilization() float64 {
	m.ctrl.T.Helper()
	ret := m.ctrl.Call(m, "GetMemoryUtilization")
	ret0, _ := ret[0].(float64)
	return ret0
}

// GetMemoryUtilization indicates an expected call of GetMemoryUtilization.
func (mr *MockSessionMetadataMockRecorder) GetMemoryUtilization() *gomock.Call {
	mr.mock.ctrl.T.Helper()
	return mr.mock.ctrl.RecordCallWithMethodType(mr.mock, "GetMemoryUtilization", reflect.TypeOf((*MockSessionMetadata)(nil).GetMemoryUtilization))
}

// GetNumGPUs mocks base method.
func (m *MockSessionMetadata) GetNumGPUs() int {
	m.ctrl.T.Helper()
	ret := m.ctrl.Call(m, "GetNumGPUs")
	ret0, _ := ret[0].(int)
	return ret0
}

// GetNumGPUs indicates an expected call of GetNumGPUs.
func (mr *MockSessionMetadataMockRecorder) GetNumGPUs() *gomock.Call {
	mr.mock.ctrl.T.Helper()
	return mr.mock.ctrl.RecordCallWithMethodType(mr.mock, "GetNumGPUs", reflect.TypeOf((*MockSessionMetadata)(nil).GetNumGPUs))
}

// GetPod mocks base method.
func (m *MockSessionMetadata) GetPod() string {
	m.ctrl.T.Helper()
	ret := m.ctrl.Call(m, "GetPod")
	ret0, _ := ret[0].(string)
	return ret0
}

// GetPod indicates an expected call of GetPod.
func (mr *MockSessionMetadataMockRecorder) GetPod() *gomock.Call {
	mr.mock.ctrl.T.Helper()
	return mr.mock.ctrl.RecordCallWithMethodType(mr.mock, "GetPod", reflect.TypeOf((*MockSessionMetadata)(nil).GetPod))
}

// GetVRAM mocks base method.
func (m *MockSessionMetadata) GetVRAM() float64 {
	m.ctrl.T.Helper()
	ret := m.ctrl.Call(m, "GetVRAM")
	ret0, _ := ret[0].(float64)
	return ret0
}

// GetVRAM indicates an expected call of GetVRAM.
func (mr *MockSessionMetadataMockRecorder) GetVRAM() *gomock.Call {
	mr.mock.ctrl.T.Helper()
	return mr.mock.ctrl.RecordCallWithMethodType(mr.mock, "GetVRAM", reflect.TypeOf((*MockSessionMetadata)(nil).GetVRAM))
}
