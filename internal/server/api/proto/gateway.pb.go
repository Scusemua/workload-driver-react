// Code generated by protoc-gen-go. DO NOT EDIT.
// versions:
// 	protoc-gen-go v1.33.0
// 	protoc        v5.26.0--rc3
// source: internal/server/api/proto/gateway.proto

package gateway

import (
	protoreflect "google.golang.org/protobuf/reflect/protoreflect"
	protoimpl "google.golang.org/protobuf/runtime/protoimpl"
	reflect "reflect"
	sync "sync"
)

const (
	// Verify that this generated code is sufficiently up-to-date.
	_ = protoimpl.EnforceVersion(20 - protoimpl.MinVersion)
	// Verify that runtime/protoimpl is sufficiently up-to-date.
	_ = protoimpl.EnforceVersion(protoimpl.MaxVersion - 20)
)

type JupyterKernelReplica struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	KernelId  string `protobuf:"bytes,1,opt,name=kernelId,proto3" json:"kernelId,omitempty"`
	ReplicaId int32  `protobuf:"varint,2,opt,name=replicaId,proto3" json:"replicaId,omitempty"`
	PodId     string `protobuf:"bytes,3,opt,name=podId,proto3" json:"podId,omitempty"`
	NodeId    string `protobuf:"bytes,4,opt,name=nodeId,proto3" json:"nodeId,omitempty"`
}

func (x *JupyterKernelReplica) Reset() {
	*x = JupyterKernelReplica{}
	if protoimpl.UnsafeEnabled {
		mi := &file_internal_server_api_proto_gateway_proto_msgTypes[0]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *JupyterKernelReplica) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*JupyterKernelReplica) ProtoMessage() {}

func (x *JupyterKernelReplica) ProtoReflect() protoreflect.Message {
	mi := &file_internal_server_api_proto_gateway_proto_msgTypes[0]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use JupyterKernelReplica.ProtoReflect.Descriptor instead.
func (*JupyterKernelReplica) Descriptor() ([]byte, []int) {
	return file_internal_server_api_proto_gateway_proto_rawDescGZIP(), []int{0}
}

func (x *JupyterKernelReplica) GetKernelId() string {
	if x != nil {
		return x.KernelId
	}
	return ""
}

func (x *JupyterKernelReplica) GetReplicaId() int32 {
	if x != nil {
		return x.ReplicaId
	}
	return 0
}

func (x *JupyterKernelReplica) GetPodId() string {
	if x != nil {
		return x.PodId
	}
	return ""
}

func (x *JupyterKernelReplica) GetNodeId() string {
	if x != nil {
		return x.NodeId
	}
	return ""
}

type DistributedJupyterKernel struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	KernelId            string                  `protobuf:"bytes,1,opt,name=kernelId,proto3" json:"kernelId,omitempty"`
	NumReplicas         int32                   `protobuf:"varint,2,opt,name=numReplicas,proto3" json:"numReplicas,omitempty"`
	Status              string                  `protobuf:"bytes,3,opt,name=status,proto3" json:"status,omitempty"`
	AggregateBusyStatus string                  `protobuf:"bytes,4,opt,name=aggregateBusyStatus,proto3" json:"aggregateBusyStatus,omitempty"`
	Replicas            []*JupyterKernelReplica `protobuf:"bytes,5,rep,name=replicas,proto3" json:"replicas,omitempty"`
}

func (x *DistributedJupyterKernel) Reset() {
	*x = DistributedJupyterKernel{}
	if protoimpl.UnsafeEnabled {
		mi := &file_internal_server_api_proto_gateway_proto_msgTypes[1]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *DistributedJupyterKernel) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*DistributedJupyterKernel) ProtoMessage() {}

func (x *DistributedJupyterKernel) ProtoReflect() protoreflect.Message {
	mi := &file_internal_server_api_proto_gateway_proto_msgTypes[1]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use DistributedJupyterKernel.ProtoReflect.Descriptor instead.
func (*DistributedJupyterKernel) Descriptor() ([]byte, []int) {
	return file_internal_server_api_proto_gateway_proto_rawDescGZIP(), []int{1}
}

func (x *DistributedJupyterKernel) GetKernelId() string {
	if x != nil {
		return x.KernelId
	}
	return ""
}

func (x *DistributedJupyterKernel) GetNumReplicas() int32 {
	if x != nil {
		return x.NumReplicas
	}
	return 0
}

func (x *DistributedJupyterKernel) GetStatus() string {
	if x != nil {
		return x.Status
	}
	return ""
}

func (x *DistributedJupyterKernel) GetAggregateBusyStatus() string {
	if x != nil {
		return x.AggregateBusyStatus
	}
	return ""
}

func (x *DistributedJupyterKernel) GetReplicas() []*JupyterKernelReplica {
	if x != nil {
		return x.Replicas
	}
	return nil
}

type ListKernelsResponse struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	NumKernels int32                       `protobuf:"varint,1,opt,name=numKernels,proto3" json:"numKernels,omitempty"`
	Kernels    []*DistributedJupyterKernel `protobuf:"bytes,2,rep,name=kernels,proto3" json:"kernels,omitempty"`
}

func (x *ListKernelsResponse) Reset() {
	*x = ListKernelsResponse{}
	if protoimpl.UnsafeEnabled {
		mi := &file_internal_server_api_proto_gateway_proto_msgTypes[2]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *ListKernelsResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*ListKernelsResponse) ProtoMessage() {}

func (x *ListKernelsResponse) ProtoReflect() protoreflect.Message {
	mi := &file_internal_server_api_proto_gateway_proto_msgTypes[2]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use ListKernelsResponse.ProtoReflect.Descriptor instead.
func (*ListKernelsResponse) Descriptor() ([]byte, []int) {
	return file_internal_server_api_proto_gateway_proto_rawDescGZIP(), []int{2}
}

func (x *ListKernelsResponse) GetNumKernels() int32 {
	if x != nil {
		return x.NumKernels
	}
	return 0
}

func (x *ListKernelsResponse) GetKernels() []*DistributedJupyterKernel {
	if x != nil {
		return x.Kernels
	}
	return nil
}

type ProvisionerId struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Id string `protobuf:"bytes,1,opt,name=id,proto3" json:"id,omitempty"`
}

func (x *ProvisionerId) Reset() {
	*x = ProvisionerId{}
	if protoimpl.UnsafeEnabled {
		mi := &file_internal_server_api_proto_gateway_proto_msgTypes[3]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *ProvisionerId) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*ProvisionerId) ProtoMessage() {}

func (x *ProvisionerId) ProtoReflect() protoreflect.Message {
	mi := &file_internal_server_api_proto_gateway_proto_msgTypes[3]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use ProvisionerId.ProtoReflect.Descriptor instead.
func (*ProvisionerId) Descriptor() ([]byte, []int) {
	return file_internal_server_api_proto_gateway_proto_rawDescGZIP(), []int{3}
}

func (x *ProvisionerId) GetId() string {
	if x != nil {
		return x.Id
	}
	return ""
}

type HostSpec struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Ip   string `protobuf:"bytes,1,opt,name=ip,proto3" json:"ip,omitempty"`
	Port int32  `protobuf:"varint,2,opt,name=port,proto3" json:"port,omitempty"`
}

func (x *HostSpec) Reset() {
	*x = HostSpec{}
	if protoimpl.UnsafeEnabled {
		mi := &file_internal_server_api_proto_gateway_proto_msgTypes[4]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *HostSpec) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*HostSpec) ProtoMessage() {}

func (x *HostSpec) ProtoReflect() protoreflect.Message {
	mi := &file_internal_server_api_proto_gateway_proto_msgTypes[4]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use HostSpec.ProtoReflect.Descriptor instead.
func (*HostSpec) Descriptor() ([]byte, []int) {
	return file_internal_server_api_proto_gateway_proto_rawDescGZIP(), []int{4}
}

func (x *HostSpec) GetIp() string {
	if x != nil {
		return x.Ip
	}
	return ""
}

func (x *HostSpec) GetPort() int32 {
	if x != nil {
		return x.Port
	}
	return 0
}

type HostId struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Id string `protobuf:"bytes,1,opt,name=id,proto3" json:"id,omitempty"`
}

func (x *HostId) Reset() {
	*x = HostId{}
	if protoimpl.UnsafeEnabled {
		mi := &file_internal_server_api_proto_gateway_proto_msgTypes[5]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *HostId) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*HostId) ProtoMessage() {}

func (x *HostId) ProtoReflect() protoreflect.Message {
	mi := &file_internal_server_api_proto_gateway_proto_msgTypes[5]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use HostId.ProtoReflect.Descriptor instead.
func (*HostId) Descriptor() ([]byte, []int) {
	return file_internal_server_api_proto_gateway_proto_rawDescGZIP(), []int{5}
}

func (x *HostId) GetId() string {
	if x != nil {
		return x.Id
	}
	return ""
}

type VirtualGpuAllocations struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Allocations map[string]*VirtualGpuAllocation `protobuf:"bytes,1,rep,name=allocations,proto3" json:"allocations,omitempty" protobuf_key:"bytes,1,opt,name=key,proto3" protobuf_val:"bytes,2,opt,name=value,proto3"`
}

func (x *VirtualGpuAllocations) Reset() {
	*x = VirtualGpuAllocations{}
	if protoimpl.UnsafeEnabled {
		mi := &file_internal_server_api_proto_gateway_proto_msgTypes[6]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *VirtualGpuAllocations) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*VirtualGpuAllocations) ProtoMessage() {}

func (x *VirtualGpuAllocations) ProtoReflect() protoreflect.Message {
	mi := &file_internal_server_api_proto_gateway_proto_msgTypes[6]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use VirtualGpuAllocations.ProtoReflect.Descriptor instead.
func (*VirtualGpuAllocations) Descriptor() ([]byte, []int) {
	return file_internal_server_api_proto_gateway_proto_rawDescGZIP(), []int{6}
}

func (x *VirtualGpuAllocations) GetAllocations() map[string]*VirtualGpuAllocation {
	if x != nil {
		return x.Allocations
	}
	return nil
}

type VirtualGpuAllocation struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	DeviceIDs []string `protobuf:"bytes,1,rep,name=deviceIDs,proto3" json:"deviceIDs,omitempty"`
}

func (x *VirtualGpuAllocation) Reset() {
	*x = VirtualGpuAllocation{}
	if protoimpl.UnsafeEnabled {
		mi := &file_internal_server_api_proto_gateway_proto_msgTypes[7]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *VirtualGpuAllocation) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*VirtualGpuAllocation) ProtoMessage() {}

func (x *VirtualGpuAllocation) ProtoReflect() protoreflect.Message {
	mi := &file_internal_server_api_proto_gateway_proto_msgTypes[7]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use VirtualGpuAllocation.ProtoReflect.Descriptor instead.
func (*VirtualGpuAllocation) Descriptor() ([]byte, []int) {
	return file_internal_server_api_proto_gateway_proto_rawDescGZIP(), []int{7}
}

func (x *VirtualGpuAllocation) GetDeviceIDs() []string {
	if x != nil {
		return x.DeviceIDs
	}
	return nil
}

type SetVirtualGPUsRequest struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Value int32 `protobuf:"varint,1,opt,name=value,proto3" json:"value,omitempty"`
}

func (x *SetVirtualGPUsRequest) Reset() {
	*x = SetVirtualGPUsRequest{}
	if protoimpl.UnsafeEnabled {
		mi := &file_internal_server_api_proto_gateway_proto_msgTypes[8]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *SetVirtualGPUsRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*SetVirtualGPUsRequest) ProtoMessage() {}

func (x *SetVirtualGPUsRequest) ProtoReflect() protoreflect.Message {
	mi := &file_internal_server_api_proto_gateway_proto_msgTypes[8]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use SetVirtualGPUsRequest.ProtoReflect.Descriptor instead.
func (*SetVirtualGPUsRequest) Descriptor() ([]byte, []int) {
	return file_internal_server_api_proto_gateway_proto_rawDescGZIP(), []int{8}
}

func (x *SetVirtualGPUsRequest) GetValue() int32 {
	if x != nil {
		return x.Value
	}
	return 0
}

// Encapsulates the current vGPU (or "deflated GPU") resource usage on a paritcular node.
type VirtualGpuInfo struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	TotalVirtualGPUs     int32 `protobuf:"varint,1,opt,name=totalVirtualGPUs,proto3" json:"totalVirtualGPUs,omitempty"`
	AllocatedVirtualGPUs int32 `protobuf:"varint,2,opt,name=allocatedVirtualGPUs,proto3" json:"allocatedVirtualGPUs,omitempty"`
	FreeVirtualGPUs      int32 `protobuf:"varint,3,opt,name=freeVirtualGPUs,proto3" json:"freeVirtualGPUs,omitempty"`
}

func (x *VirtualGpuInfo) Reset() {
	*x = VirtualGpuInfo{}
	if protoimpl.UnsafeEnabled {
		mi := &file_internal_server_api_proto_gateway_proto_msgTypes[9]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *VirtualGpuInfo) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*VirtualGpuInfo) ProtoMessage() {}

func (x *VirtualGpuInfo) ProtoReflect() protoreflect.Message {
	mi := &file_internal_server_api_proto_gateway_proto_msgTypes[9]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use VirtualGpuInfo.ProtoReflect.Descriptor instead.
func (*VirtualGpuInfo) Descriptor() ([]byte, []int) {
	return file_internal_server_api_proto_gateway_proto_rawDescGZIP(), []int{9}
}

func (x *VirtualGpuInfo) GetTotalVirtualGPUs() int32 {
	if x != nil {
		return x.TotalVirtualGPUs
	}
	return 0
}

func (x *VirtualGpuInfo) GetAllocatedVirtualGPUs() int32 {
	if x != nil {
		return x.AllocatedVirtualGPUs
	}
	return 0
}

func (x *VirtualGpuInfo) GetFreeVirtualGPUs() int32 {
	if x != nil {
		return x.FreeVirtualGPUs
	}
	return 0
}

// Encapsulates the current GPU resource usage on a paritcular node.
type GpuInfo struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	SpecGPUs              int32  `protobuf:"varint,1,opt,name=specGPUs,proto3" json:"specGPUs,omitempty"`                           // The total number of GPUs c onfigured/present on this node.
	IdleGPUs              int32  `protobuf:"varint,2,opt,name=idleGPUs,proto3" json:"idleGPUs,omitempty"`                           // The number of GPUs that are uncommitted and therefore available on this node. This quantity is equal to specGPUs - committedGPUs.
	CommittedGPUs         int32  `protobuf:"varint,3,opt,name=committedGPUs,proto3" json:"committedGPUs,omitempty"`                 // The number of GPUs that are actively committed and allocated to replicas that are scheduled onto this node.
	PendingGPUs           int32  `protobuf:"varint,4,opt,name=pendingGPUs,proto3" json:"pendingGPUs,omitempty"`                     // The sum of the outstanding GPUs of all replicas scheduled onto this node. Pending GPUs are not allocated or committed to a particular replica yet. The time at which resources are actually committed to a replica depends upon the policy being used. In some cases, they're committed immediately. In other cases, they're committed only when the replica is actively training.
	NumPendingAllocations int32  `protobuf:"varint,5,opt,name=numPendingAllocations,proto3" json:"numPendingAllocations,omitempty"` // Number of individual allocations consisting of GPUs that have NOT been fully committed to a kernel.
	NumAllocations        int32  `protobuf:"varint,6,opt,name=numAllocations,proto3" json:"numAllocations,omitempty"`               // Number of individual allocations such that the GPUs have been committed to a container.
	GpuSchedulerID        string `protobuf:"bytes,7,opt,name=gpuSchedulerID,proto3" json:"gpuSchedulerID,omitempty"`                // Unique ID of the gpu scheduler (which is a component of a local daemon) that is reporting these metrics.
	LocalDaemonID         string `protobuf:"bytes,8,opt,name=localDaemonID,proto3" json:"localDaemonID,omitempty"`                  // Unique ID of the associated local daemon.
}

func (x *GpuInfo) Reset() {
	*x = GpuInfo{}
	if protoimpl.UnsafeEnabled {
		mi := &file_internal_server_api_proto_gateway_proto_msgTypes[10]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *GpuInfo) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*GpuInfo) ProtoMessage() {}

func (x *GpuInfo) ProtoReflect() protoreflect.Message {
	mi := &file_internal_server_api_proto_gateway_proto_msgTypes[10]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use GpuInfo.ProtoReflect.Descriptor instead.
func (*GpuInfo) Descriptor() ([]byte, []int) {
	return file_internal_server_api_proto_gateway_proto_rawDescGZIP(), []int{10}
}

func (x *GpuInfo) GetSpecGPUs() int32 {
	if x != nil {
		return x.SpecGPUs
	}
	return 0
}

func (x *GpuInfo) GetIdleGPUs() int32 {
	if x != nil {
		return x.IdleGPUs
	}
	return 0
}

func (x *GpuInfo) GetCommittedGPUs() int32 {
	if x != nil {
		return x.CommittedGPUs
	}
	return 0
}

func (x *GpuInfo) GetPendingGPUs() int32 {
	if x != nil {
		return x.PendingGPUs
	}
	return 0
}

func (x *GpuInfo) GetNumPendingAllocations() int32 {
	if x != nil {
		return x.NumPendingAllocations
	}
	return 0
}

func (x *GpuInfo) GetNumAllocations() int32 {
	if x != nil {
		return x.NumAllocations
	}
	return 0
}

func (x *GpuInfo) GetGpuSchedulerID() string {
	if x != nil {
		return x.GpuSchedulerID
	}
	return ""
}

func (x *GpuInfo) GetLocalDaemonID() string {
	if x != nil {
		return x.LocalDaemonID
	}
	return ""
}

// The input for starting a kernel replica.
type KernelReplicaSpec struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Kernel       *KernelSpec `protobuf:"bytes,1,opt,name=kernel,proto3" json:"kernel,omitempty"`
	ReplicaId    int32       `protobuf:"varint,2,opt,name=replicaId,proto3" json:"replicaId,omitempty"`
	NumReplicas  int32       `protobuf:"varint,3,opt,name=numReplicas,proto3" json:"numReplicas,omitempty"`
	Replicas     []string    `protobuf:"bytes,4,rep,name=replicas,proto3" json:"replicas,omitempty"`
	Join         bool        `protobuf:"varint,5,opt,name=join,proto3" json:"join,omitempty"`
	PersistentId *string     `protobuf:"bytes,6,opt,name=persistentId,proto3,oneof" json:"persistentId,omitempty"`
}

func (x *KernelReplicaSpec) Reset() {
	*x = KernelReplicaSpec{}
	if protoimpl.UnsafeEnabled {
		mi := &file_internal_server_api_proto_gateway_proto_msgTypes[11]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *KernelReplicaSpec) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*KernelReplicaSpec) ProtoMessage() {}

func (x *KernelReplicaSpec) ProtoReflect() protoreflect.Message {
	mi := &file_internal_server_api_proto_gateway_proto_msgTypes[11]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use KernelReplicaSpec.ProtoReflect.Descriptor instead.
func (*KernelReplicaSpec) Descriptor() ([]byte, []int) {
	return file_internal_server_api_proto_gateway_proto_rawDescGZIP(), []int{11}
}

func (x *KernelReplicaSpec) GetKernel() *KernelSpec {
	if x != nil {
		return x.Kernel
	}
	return nil
}

func (x *KernelReplicaSpec) GetReplicaId() int32 {
	if x != nil {
		return x.ReplicaId
	}
	return 0
}

func (x *KernelReplicaSpec) GetNumReplicas() int32 {
	if x != nil {
		return x.NumReplicas
	}
	return 0
}

func (x *KernelReplicaSpec) GetReplicas() []string {
	if x != nil {
		return x.Replicas
	}
	return nil
}

func (x *KernelReplicaSpec) GetJoin() bool {
	if x != nil {
		return x.Join
	}
	return false
}

func (x *KernelReplicaSpec) GetPersistentId() string {
	if x != nil && x.PersistentId != nil {
		return *x.PersistentId
	}
	return ""
}

type ResourceSpec struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Cpu    int32 `protobuf:"varint,1,opt,name=cpu,proto3" json:"cpu,omitempty"`       // In 1/100 core.
	Memory int32 `protobuf:"varint,2,opt,name=memory,proto3" json:"memory,omitempty"` // In MB.
	Gpu    int32 `protobuf:"varint,3,opt,name=gpu,proto3" json:"gpu,omitempty"`       // Number of GPUs.
}

func (x *ResourceSpec) Reset() {
	*x = ResourceSpec{}
	if protoimpl.UnsafeEnabled {
		mi := &file_internal_server_api_proto_gateway_proto_msgTypes[12]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *ResourceSpec) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*ResourceSpec) ProtoMessage() {}

func (x *ResourceSpec) ProtoReflect() protoreflect.Message {
	mi := &file_internal_server_api_proto_gateway_proto_msgTypes[12]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use ResourceSpec.ProtoReflect.Descriptor instead.
func (*ResourceSpec) Descriptor() ([]byte, []int) {
	return file_internal_server_api_proto_gateway_proto_rawDescGZIP(), []int{12}
}

func (x *ResourceSpec) GetCpu() int32 {
	if x != nil {
		return x.Cpu
	}
	return 0
}

func (x *ResourceSpec) GetMemory() int32 {
	if x != nil {
		return x.Memory
	}
	return 0
}

func (x *ResourceSpec) GetGpu() int32 {
	if x != nil {
		return x.Gpu
	}
	return 0
}

// The kernel id.
type KernelId struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Id           string  `protobuf:"bytes,1,opt,name=id,proto3" json:"id,omitempty"`
	Restart      *bool   `protobuf:"varint,2,opt,name=restart,proto3,oneof" json:"restart,omitempty"`
	PersistentId *string `protobuf:"bytes,3,opt,name=persistentId,proto3,oneof" json:"persistentId,omitempty"`
}

func (x *KernelId) Reset() {
	*x = KernelId{}
	if protoimpl.UnsafeEnabled {
		mi := &file_internal_server_api_proto_gateway_proto_msgTypes[13]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *KernelId) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*KernelId) ProtoMessage() {}

func (x *KernelId) ProtoReflect() protoreflect.Message {
	mi := &file_internal_server_api_proto_gateway_proto_msgTypes[13]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use KernelId.ProtoReflect.Descriptor instead.
func (*KernelId) Descriptor() ([]byte, []int) {
	return file_internal_server_api_proto_gateway_proto_rawDescGZIP(), []int{13}
}

func (x *KernelId) GetId() string {
	if x != nil {
		return x.Id
	}
	return ""
}

func (x *KernelId) GetRestart() bool {
	if x != nil && x.Restart != nil {
		return *x.Restart
	}
	return false
}

func (x *KernelId) GetPersistentId() string {
	if x != nil && x.PersistentId != nil {
		return *x.PersistentId
	}
	return ""
}

// The paramters for migration
type ReplicaInfo struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	KernelId     string `protobuf:"bytes,1,opt,name=kernelId,proto3" json:"kernelId,omitempty"`
	ReplicaId    int32  `protobuf:"varint,2,opt,name=replicaId,proto3" json:"replicaId,omitempty"`
	PersistentId string `protobuf:"bytes,3,opt,name=persistentId,proto3" json:"persistentId,omitempty"`
}

func (x *ReplicaInfo) Reset() {
	*x = ReplicaInfo{}
	if protoimpl.UnsafeEnabled {
		mi := &file_internal_server_api_proto_gateway_proto_msgTypes[14]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *ReplicaInfo) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*ReplicaInfo) ProtoMessage() {}

func (x *ReplicaInfo) ProtoReflect() protoreflect.Message {
	mi := &file_internal_server_api_proto_gateway_proto_msgTypes[14]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use ReplicaInfo.ProtoReflect.Descriptor instead.
func (*ReplicaInfo) Descriptor() ([]byte, []int) {
	return file_internal_server_api_proto_gateway_proto_rawDescGZIP(), []int{14}
}

func (x *ReplicaInfo) GetKernelId() string {
	if x != nil {
		return x.KernelId
	}
	return ""
}

func (x *ReplicaInfo) GetReplicaId() int32 {
	if x != nil {
		return x.ReplicaId
	}
	return 0
}

func (x *ReplicaInfo) GetPersistentId() string {
	if x != nil {
		return x.PersistentId
	}
	return ""
}

type MigrationRequest struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	TargetReplica *ReplicaInfo `protobuf:"bytes,1,opt,name=targetReplica,proto3" json:"targetReplica,omitempty"`
	TargetNodeId  *string      `protobuf:"bytes,2,opt,name=targetNodeId,proto3,oneof" json:"targetNodeId,omitempty"`
}

func (x *MigrationRequest) Reset() {
	*x = MigrationRequest{}
	if protoimpl.UnsafeEnabled {
		mi := &file_internal_server_api_proto_gateway_proto_msgTypes[15]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *MigrationRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*MigrationRequest) ProtoMessage() {}

func (x *MigrationRequest) ProtoReflect() protoreflect.Message {
	mi := &file_internal_server_api_proto_gateway_proto_msgTypes[15]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use MigrationRequest.ProtoReflect.Descriptor instead.
func (*MigrationRequest) Descriptor() ([]byte, []int) {
	return file_internal_server_api_proto_gateway_proto_rawDescGZIP(), []int{15}
}

func (x *MigrationRequest) GetTargetReplica() *ReplicaInfo {
	if x != nil {
		return x.TargetReplica
	}
	return nil
}

func (x *MigrationRequest) GetTargetNodeId() string {
	if x != nil && x.TargetNodeId != nil {
		return *x.TargetNodeId
	}
	return ""
}

type SmrReadyNotification struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	KernelId     string `protobuf:"bytes,1,opt,name=kernelId,proto3" json:"kernelId,omitempty"`
	ReplicaId    int32  `protobuf:"varint,2,opt,name=replicaId,proto3" json:"replicaId,omitempty"`
	PersistentId string `protobuf:"bytes,3,opt,name=persistentId,proto3" json:"persistentId,omitempty"`
	Address      string `protobuf:"bytes,4,opt,name=address,proto3" json:"address,omitempty"`
}

func (x *SmrReadyNotification) Reset() {
	*x = SmrReadyNotification{}
	if protoimpl.UnsafeEnabled {
		mi := &file_internal_server_api_proto_gateway_proto_msgTypes[16]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *SmrReadyNotification) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*SmrReadyNotification) ProtoMessage() {}

func (x *SmrReadyNotification) ProtoReflect() protoreflect.Message {
	mi := &file_internal_server_api_proto_gateway_proto_msgTypes[16]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use SmrReadyNotification.ProtoReflect.Descriptor instead.
func (*SmrReadyNotification) Descriptor() ([]byte, []int) {
	return file_internal_server_api_proto_gateway_proto_rawDescGZIP(), []int{16}
}

func (x *SmrReadyNotification) GetKernelId() string {
	if x != nil {
		return x.KernelId
	}
	return ""
}

func (x *SmrReadyNotification) GetReplicaId() int32 {
	if x != nil {
		return x.ReplicaId
	}
	return 0
}

func (x *SmrReadyNotification) GetPersistentId() string {
	if x != nil {
		return x.PersistentId
	}
	return ""
}

func (x *SmrReadyNotification) GetAddress() string {
	if x != nil {
		return x.Address
	}
	return ""
}

// The replica id.
type ReplicaId struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Id int32 `protobuf:"varint,1,opt,name=id,proto3" json:"id,omitempty"`
}

func (x *ReplicaId) Reset() {
	*x = ReplicaId{}
	if protoimpl.UnsafeEnabled {
		mi := &file_internal_server_api_proto_gateway_proto_msgTypes[17]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *ReplicaId) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*ReplicaId) ProtoMessage() {}

func (x *ReplicaId) ProtoReflect() protoreflect.Message {
	mi := &file_internal_server_api_proto_gateway_proto_msgTypes[17]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use ReplicaId.ProtoReflect.Descriptor instead.
func (*ReplicaId) Descriptor() ([]byte, []int) {
	return file_internal_server_api_proto_gateway_proto_rawDescGZIP(), []int{17}
}

func (x *ReplicaId) GetId() int32 {
	if x != nil {
		return x.Id
	}
	return 0
}

type PrepareToMigrateResponse struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Id       int32  `protobuf:"varint,1,opt,name=id,proto3" json:"id,omitempty"`
	KernelId string `protobuf:"bytes,2,opt,name=kernelId,proto3" json:"kernelId,omitempty"`
	DataDir  string `protobuf:"bytes,3,opt,name=dataDir,proto3" json:"dataDir,omitempty"`
}

func (x *PrepareToMigrateResponse) Reset() {
	*x = PrepareToMigrateResponse{}
	if protoimpl.UnsafeEnabled {
		mi := &file_internal_server_api_proto_gateway_proto_msgTypes[18]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *PrepareToMigrateResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*PrepareToMigrateResponse) ProtoMessage() {}

func (x *PrepareToMigrateResponse) ProtoReflect() protoreflect.Message {
	mi := &file_internal_server_api_proto_gateway_proto_msgTypes[18]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use PrepareToMigrateResponse.ProtoReflect.Descriptor instead.
func (*PrepareToMigrateResponse) Descriptor() ([]byte, []int) {
	return file_internal_server_api_proto_gateway_proto_rawDescGZIP(), []int{18}
}

func (x *PrepareToMigrateResponse) GetId() int32 {
	if x != nil {
		return x.Id
	}
	return 0
}

func (x *PrepareToMigrateResponse) GetKernelId() string {
	if x != nil {
		return x.KernelId
	}
	return ""
}

func (x *PrepareToMigrateResponse) GetDataDir() string {
	if x != nil {
		return x.DataDir
	}
	return ""
}

type MigrateKernelResponse struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Id       int32  `protobuf:"varint,1,opt,name=id,proto3" json:"id,omitempty"`
	Hostname string `protobuf:"bytes,2,opt,name=hostname,proto3" json:"hostname,omitempty"`
}

func (x *MigrateKernelResponse) Reset() {
	*x = MigrateKernelResponse{}
	if protoimpl.UnsafeEnabled {
		mi := &file_internal_server_api_proto_gateway_proto_msgTypes[19]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *MigrateKernelResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*MigrateKernelResponse) ProtoMessage() {}

func (x *MigrateKernelResponse) ProtoReflect() protoreflect.Message {
	mi := &file_internal_server_api_proto_gateway_proto_msgTypes[19]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use MigrateKernelResponse.ProtoReflect.Descriptor instead.
func (*MigrateKernelResponse) Descriptor() ([]byte, []int) {
	return file_internal_server_api_proto_gateway_proto_rawDescGZIP(), []int{19}
}

func (x *MigrateKernelResponse) GetId() int32 {
	if x != nil {
		return x.Id
	}
	return 0
}

func (x *MigrateKernelResponse) GetHostname() string {
	if x != nil {
		return x.Hostname
	}
	return ""
}

// Similar to ReplicaInfo, but instead of a persistentId field, this has a hostname field.
type ReplicaInfoWithAddr struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Id       int32  `protobuf:"varint,1,opt,name=id,proto3" json:"id,omitempty"`
	Hostname string `protobuf:"bytes,2,opt,name=hostname,proto3" json:"hostname,omitempty"`
	KernelId string `protobuf:"bytes,3,opt,name=kernelId,proto3" json:"kernelId,omitempty"`
}

func (x *ReplicaInfoWithAddr) Reset() {
	*x = ReplicaInfoWithAddr{}
	if protoimpl.UnsafeEnabled {
		mi := &file_internal_server_api_proto_gateway_proto_msgTypes[20]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *ReplicaInfoWithAddr) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*ReplicaInfoWithAddr) ProtoMessage() {}

func (x *ReplicaInfoWithAddr) ProtoReflect() protoreflect.Message {
	mi := &file_internal_server_api_proto_gateway_proto_msgTypes[20]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use ReplicaInfoWithAddr.ProtoReflect.Descriptor instead.
func (*ReplicaInfoWithAddr) Descriptor() ([]byte, []int) {
	return file_internal_server_api_proto_gateway_proto_rawDescGZIP(), []int{20}
}

func (x *ReplicaInfoWithAddr) GetId() int32 {
	if x != nil {
		return x.Id
	}
	return 0
}

func (x *ReplicaInfoWithAddr) GetHostname() string {
	if x != nil {
		return x.Hostname
	}
	return ""
}

func (x *ReplicaInfoWithAddr) GetKernelId() string {
	if x != nil {
		return x.KernelId
	}
	return ""
}

// The kernel spec.
type KernelSpec struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Id              string        `protobuf:"bytes,1,opt,name=id,proto3" json:"id,omitempty"`           // The kernel id.
	Session         string        `protobuf:"bytes,2,opt,name=session,proto3" json:"session,omitempty"` // The id of session associated with the kernel manager.
	Argv            []string      `protobuf:"bytes,3,rep,name=argv,proto3" json:"argv,omitempty"`
	SignatureScheme string        `protobuf:"bytes,4,opt,name=signatureScheme,proto3" json:"signatureScheme,omitempty"` // The signature scheme to use.
	Key             string        `protobuf:"bytes,5,opt,name=key,proto3" json:"key,omitempty"`                         // The key to use for signing messages.
	Resource        *ResourceSpec `protobuf:"bytes,6,opt,name=resource,proto3" json:"resource,omitempty"`
}

func (x *KernelSpec) Reset() {
	*x = KernelSpec{}
	if protoimpl.UnsafeEnabled {
		mi := &file_internal_server_api_proto_gateway_proto_msgTypes[21]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *KernelSpec) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*KernelSpec) ProtoMessage() {}

func (x *KernelSpec) ProtoReflect() protoreflect.Message {
	mi := &file_internal_server_api_proto_gateway_proto_msgTypes[21]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use KernelSpec.ProtoReflect.Descriptor instead.
func (*KernelSpec) Descriptor() ([]byte, []int) {
	return file_internal_server_api_proto_gateway_proto_rawDescGZIP(), []int{21}
}

func (x *KernelSpec) GetId() string {
	if x != nil {
		return x.Id
	}
	return ""
}

func (x *KernelSpec) GetSession() string {
	if x != nil {
		return x.Session
	}
	return ""
}

func (x *KernelSpec) GetArgv() []string {
	if x != nil {
		return x.Argv
	}
	return nil
}

func (x *KernelSpec) GetSignatureScheme() string {
	if x != nil {
		return x.SignatureScheme
	}
	return ""
}

func (x *KernelSpec) GetKey() string {
	if x != nil {
		return x.Key
	}
	return ""
}

func (x *KernelSpec) GetResource() *ResourceSpec {
	if x != nil {
		return x.Resource
	}
	return nil
}

// The connection info for a kernel.
type KernelConnectionInfo struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Ip              string `protobuf:"bytes,1,opt,name=ip,proto3" json:"ip,omitempty"`                           // The IP address of the kernel.
	Transport       string `protobuf:"bytes,2,opt,name=transport,proto3" json:"transport,omitempty"`             // The transport protocol to use.
	ControlPort     int32  `protobuf:"varint,3,opt,name=controlPort,proto3" json:"controlPort,omitempty"`        // The port for control messages.
	ShellPort       int32  `protobuf:"varint,4,opt,name=shellPort,proto3" json:"shellPort,omitempty"`            // The port for shell messages.
	StdinPort       int32  `protobuf:"varint,5,opt,name=stdinPort,proto3" json:"stdinPort,omitempty"`            // The port for stdin messages.
	HbPort          int32  `protobuf:"varint,6,opt,name=hbPort,proto3" json:"hbPort,omitempty"`                  // The port for heartbeat messages.
	IopubPort       int32  `protobuf:"varint,7,opt,name=iopubPort,proto3" json:"iopubPort,omitempty"`            // The port for iopub messages (for the pub socket).
	IosubPort       int32  `protobuf:"varint,8,opt,name=iosubPort,proto3" json:"iosubPort,omitempty"`            // The port for iopub messages (for the sub socket).
	SignatureScheme string `protobuf:"bytes,9,opt,name=signatureScheme,proto3" json:"signatureScheme,omitempty"` // The signature scheme to use.
	Key             string `protobuf:"bytes,10,opt,name=key,proto3" json:"key,omitempty"`                        // The key to use for signing messages.
}

func (x *KernelConnectionInfo) Reset() {
	*x = KernelConnectionInfo{}
	if protoimpl.UnsafeEnabled {
		mi := &file_internal_server_api_proto_gateway_proto_msgTypes[22]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *KernelConnectionInfo) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*KernelConnectionInfo) ProtoMessage() {}

func (x *KernelConnectionInfo) ProtoReflect() protoreflect.Message {
	mi := &file_internal_server_api_proto_gateway_proto_msgTypes[22]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use KernelConnectionInfo.ProtoReflect.Descriptor instead.
func (*KernelConnectionInfo) Descriptor() ([]byte, []int) {
	return file_internal_server_api_proto_gateway_proto_rawDescGZIP(), []int{22}
}

func (x *KernelConnectionInfo) GetIp() string {
	if x != nil {
		return x.Ip
	}
	return ""
}

func (x *KernelConnectionInfo) GetTransport() string {
	if x != nil {
		return x.Transport
	}
	return ""
}

func (x *KernelConnectionInfo) GetControlPort() int32 {
	if x != nil {
		return x.ControlPort
	}
	return 0
}

func (x *KernelConnectionInfo) GetShellPort() int32 {
	if x != nil {
		return x.ShellPort
	}
	return 0
}

func (x *KernelConnectionInfo) GetStdinPort() int32 {
	if x != nil {
		return x.StdinPort
	}
	return 0
}

func (x *KernelConnectionInfo) GetHbPort() int32 {
	if x != nil {
		return x.HbPort
	}
	return 0
}

func (x *KernelConnectionInfo) GetIopubPort() int32 {
	if x != nil {
		return x.IopubPort
	}
	return 0
}

func (x *KernelConnectionInfo) GetIosubPort() int32 {
	if x != nil {
		return x.IosubPort
	}
	return 0
}

func (x *KernelConnectionInfo) GetSignatureScheme() string {
	if x != nil {
		return x.SignatureScheme
	}
	return ""
}

func (x *KernelConnectionInfo) GetKey() string {
	if x != nil {
		return x.Key
	}
	return ""
}

// Used as an argument to the Cluster Gateway's NotifyKernelRegistered RPC.
type KernelRegistrationNotification struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	ConnectionInfo *KernelConnectionInfo `protobuf:"bytes,1,opt,name=connectionInfo,proto3" json:"connectionInfo,omitempty"` // Connection information of the kernel.
	KernelId       string                `protobuf:"bytes,2,opt,name=kernelId,proto3" json:"kernelId,omitempty"`             // ID of the Kernel.
	SessionId      string                `protobuf:"bytes,3,opt,name=sessionId,proto3" json:"sessionId,omitempty"`           // ID of the associated Session.
	HostId         string                `protobuf:"bytes,4,opt,name=hostId,proto3" json:"hostId,omitempty"`                 // The ID of the HostScheduler associated with this Host. It's basically the ID of the LocalDaemon.
	ReplicaId      int32                 `protobuf:"varint,5,opt,name=replicaId,proto3" json:"replicaId,omitempty"`          // The SMR replica ID.
	KernelIp       string                `protobuf:"bytes,6,opt,name=kernelIp,proto3" json:"kernelIp,omitempty"`             // The hostname of the kernel itself (not its LocalDaemon).
	PodName        string                `protobuf:"bytes,7,opt,name=podName,proto3" json:"podName,omitempty"`               // The name of the Pod hosting the kernel container.
	NodeName       string                `protobuf:"bytes,8,opt,name=nodeName,proto3" json:"nodeName,omitempty"`             // Name of the node that the Pod is running on.
}

func (x *KernelRegistrationNotification) Reset() {
	*x = KernelRegistrationNotification{}
	if protoimpl.UnsafeEnabled {
		mi := &file_internal_server_api_proto_gateway_proto_msgTypes[23]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *KernelRegistrationNotification) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*KernelRegistrationNotification) ProtoMessage() {}

func (x *KernelRegistrationNotification) ProtoReflect() protoreflect.Message {
	mi := &file_internal_server_api_proto_gateway_proto_msgTypes[23]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use KernelRegistrationNotification.ProtoReflect.Descriptor instead.
func (*KernelRegistrationNotification) Descriptor() ([]byte, []int) {
	return file_internal_server_api_proto_gateway_proto_rawDescGZIP(), []int{23}
}

func (x *KernelRegistrationNotification) GetConnectionInfo() *KernelConnectionInfo {
	if x != nil {
		return x.ConnectionInfo
	}
	return nil
}

func (x *KernelRegistrationNotification) GetKernelId() string {
	if x != nil {
		return x.KernelId
	}
	return ""
}

func (x *KernelRegistrationNotification) GetSessionId() string {
	if x != nil {
		return x.SessionId
	}
	return ""
}

func (x *KernelRegistrationNotification) GetHostId() string {
	if x != nil {
		return x.HostId
	}
	return ""
}

func (x *KernelRegistrationNotification) GetReplicaId() int32 {
	if x != nil {
		return x.ReplicaId
	}
	return 0
}

func (x *KernelRegistrationNotification) GetKernelIp() string {
	if x != nil {
		return x.KernelIp
	}
	return ""
}

func (x *KernelRegistrationNotification) GetPodName() string {
	if x != nil {
		return x.PodName
	}
	return ""
}

func (x *KernelRegistrationNotification) GetNodeName() string {
	if x != nil {
		return x.NodeName
	}
	return ""
}

// Returned by the Cluster Gateway for the NotifyKernelRegistered RPC.
type KernelRegistrationNotificationResponse struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Id            int32            `protobuf:"varint,1,opt,name=id,proto3" json:"id,omitempty"`
	Replicas      map[int32]string `protobuf:"bytes,2,rep,name=replicas,proto3" json:"replicas,omitempty" protobuf_key:"varint,1,opt,name=key,proto3" protobuf_val:"bytes,2,opt,name=value,proto3"`
	PersistentId  *string          `protobuf:"bytes,3,opt,name=persistentId,proto3,oneof" json:"persistentId,omitempty"`
	SmrPort       int32            `protobuf:"varint,4,opt,name=smrPort,proto3" json:"smrPort,omitempty"`
	DataDirectory *string          `protobuf:"bytes,5,opt,name=dataDirectory,proto3,oneof" json:"dataDirectory,omitempty"`
}

func (x *KernelRegistrationNotificationResponse) Reset() {
	*x = KernelRegistrationNotificationResponse{}
	if protoimpl.UnsafeEnabled {
		mi := &file_internal_server_api_proto_gateway_proto_msgTypes[24]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *KernelRegistrationNotificationResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*KernelRegistrationNotificationResponse) ProtoMessage() {}

func (x *KernelRegistrationNotificationResponse) ProtoReflect() protoreflect.Message {
	mi := &file_internal_server_api_proto_gateway_proto_msgTypes[24]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use KernelRegistrationNotificationResponse.ProtoReflect.Descriptor instead.
func (*KernelRegistrationNotificationResponse) Descriptor() ([]byte, []int) {
	return file_internal_server_api_proto_gateway_proto_rawDescGZIP(), []int{24}
}

func (x *KernelRegistrationNotificationResponse) GetId() int32 {
	if x != nil {
		return x.Id
	}
	return 0
}

func (x *KernelRegistrationNotificationResponse) GetReplicas() map[int32]string {
	if x != nil {
		return x.Replicas
	}
	return nil
}

func (x *KernelRegistrationNotificationResponse) GetPersistentId() string {
	if x != nil && x.PersistentId != nil {
		return *x.PersistentId
	}
	return ""
}

func (x *KernelRegistrationNotificationResponse) GetSmrPort() int32 {
	if x != nil {
		return x.SmrPort
	}
	return 0
}

func (x *KernelRegistrationNotificationResponse) GetDataDirectory() string {
	if x != nil && x.DataDirectory != nil {
		return *x.DataDirectory
	}
	return ""
}

// The status of a kernel.
type KernelStatus struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Status int32 `protobuf:"varint,1,opt,name=status,proto3" json:"status,omitempty"`
}

func (x *KernelStatus) Reset() {
	*x = KernelStatus{}
	if protoimpl.UnsafeEnabled {
		mi := &file_internal_server_api_proto_gateway_proto_msgTypes[25]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *KernelStatus) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*KernelStatus) ProtoMessage() {}

func (x *KernelStatus) ProtoReflect() protoreflect.Message {
	mi := &file_internal_server_api_proto_gateway_proto_msgTypes[25]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use KernelStatus.ProtoReflect.Descriptor instead.
func (*KernelStatus) Descriptor() ([]byte, []int) {
	return file_internal_server_api_proto_gateway_proto_rawDescGZIP(), []int{25}
}

func (x *KernelStatus) GetStatus() int32 {
	if x != nil {
		return x.Status
	}
	return 0
}

type Void struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields
}

func (x *Void) Reset() {
	*x = Void{}
	if protoimpl.UnsafeEnabled {
		mi := &file_internal_server_api_proto_gateway_proto_msgTypes[26]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *Void) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*Void) ProtoMessage() {}

func (x *Void) ProtoReflect() protoreflect.Message {
	mi := &file_internal_server_api_proto_gateway_proto_msgTypes[26]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use Void.ProtoReflect.Descriptor instead.
func (*Void) Descriptor() ([]byte, []int) {
	return file_internal_server_api_proto_gateway_proto_rawDescGZIP(), []int{26}
}

var File_internal_server_api_proto_gateway_proto protoreflect.FileDescriptor

var file_internal_server_api_proto_gateway_proto_rawDesc = []byte{
	0x0a, 0x27, 0x69, 0x6e, 0x74, 0x65, 0x72, 0x6e, 0x61, 0x6c, 0x2f, 0x73, 0x65, 0x72, 0x76, 0x65,
	0x72, 0x2f, 0x61, 0x70, 0x69, 0x2f, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x2f, 0x67, 0x61, 0x74, 0x65,
	0x77, 0x61, 0x79, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x12, 0x07, 0x67, 0x61, 0x74, 0x65, 0x77,
	0x61, 0x79, 0x22, 0x7e, 0x0a, 0x14, 0x4a, 0x75, 0x70, 0x79, 0x74, 0x65, 0x72, 0x4b, 0x65, 0x72,
	0x6e, 0x65, 0x6c, 0x52, 0x65, 0x70, 0x6c, 0x69, 0x63, 0x61, 0x12, 0x1a, 0x0a, 0x08, 0x6b, 0x65,
	0x72, 0x6e, 0x65, 0x6c, 0x49, 0x64, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x52, 0x08, 0x6b, 0x65,
	0x72, 0x6e, 0x65, 0x6c, 0x49, 0x64, 0x12, 0x1c, 0x0a, 0x09, 0x72, 0x65, 0x70, 0x6c, 0x69, 0x63,
	0x61, 0x49, 0x64, 0x18, 0x02, 0x20, 0x01, 0x28, 0x05, 0x52, 0x09, 0x72, 0x65, 0x70, 0x6c, 0x69,
	0x63, 0x61, 0x49, 0x64, 0x12, 0x14, 0x0a, 0x05, 0x70, 0x6f, 0x64, 0x49, 0x64, 0x18, 0x03, 0x20,
	0x01, 0x28, 0x09, 0x52, 0x05, 0x70, 0x6f, 0x64, 0x49, 0x64, 0x12, 0x16, 0x0a, 0x06, 0x6e, 0x6f,
	0x64, 0x65, 0x49, 0x64, 0x18, 0x04, 0x20, 0x01, 0x28, 0x09, 0x52, 0x06, 0x6e, 0x6f, 0x64, 0x65,
	0x49, 0x64, 0x22, 0xdd, 0x01, 0x0a, 0x18, 0x44, 0x69, 0x73, 0x74, 0x72, 0x69, 0x62, 0x75, 0x74,
	0x65, 0x64, 0x4a, 0x75, 0x70, 0x79, 0x74, 0x65, 0x72, 0x4b, 0x65, 0x72, 0x6e, 0x65, 0x6c, 0x12,
	0x1a, 0x0a, 0x08, 0x6b, 0x65, 0x72, 0x6e, 0x65, 0x6c, 0x49, 0x64, 0x18, 0x01, 0x20, 0x01, 0x28,
	0x09, 0x52, 0x08, 0x6b, 0x65, 0x72, 0x6e, 0x65, 0x6c, 0x49, 0x64, 0x12, 0x20, 0x0a, 0x0b, 0x6e,
	0x75, 0x6d, 0x52, 0x65, 0x70, 0x6c, 0x69, 0x63, 0x61, 0x73, 0x18, 0x02, 0x20, 0x01, 0x28, 0x05,
	0x52, 0x0b, 0x6e, 0x75, 0x6d, 0x52, 0x65, 0x70, 0x6c, 0x69, 0x63, 0x61, 0x73, 0x12, 0x16, 0x0a,
	0x06, 0x73, 0x74, 0x61, 0x74, 0x75, 0x73, 0x18, 0x03, 0x20, 0x01, 0x28, 0x09, 0x52, 0x06, 0x73,
	0x74, 0x61, 0x74, 0x75, 0x73, 0x12, 0x30, 0x0a, 0x13, 0x61, 0x67, 0x67, 0x72, 0x65, 0x67, 0x61,
	0x74, 0x65, 0x42, 0x75, 0x73, 0x79, 0x53, 0x74, 0x61, 0x74, 0x75, 0x73, 0x18, 0x04, 0x20, 0x01,
	0x28, 0x09, 0x52, 0x13, 0x61, 0x67, 0x67, 0x72, 0x65, 0x67, 0x61, 0x74, 0x65, 0x42, 0x75, 0x73,
	0x79, 0x53, 0x74, 0x61, 0x74, 0x75, 0x73, 0x12, 0x39, 0x0a, 0x08, 0x72, 0x65, 0x70, 0x6c, 0x69,
	0x63, 0x61, 0x73, 0x18, 0x05, 0x20, 0x03, 0x28, 0x0b, 0x32, 0x1d, 0x2e, 0x67, 0x61, 0x74, 0x65,
	0x77, 0x61, 0x79, 0x2e, 0x4a, 0x75, 0x70, 0x79, 0x74, 0x65, 0x72, 0x4b, 0x65, 0x72, 0x6e, 0x65,
	0x6c, 0x52, 0x65, 0x70, 0x6c, 0x69, 0x63, 0x61, 0x52, 0x08, 0x72, 0x65, 0x70, 0x6c, 0x69, 0x63,
	0x61, 0x73, 0x22, 0x72, 0x0a, 0x13, 0x4c, 0x69, 0x73, 0x74, 0x4b, 0x65, 0x72, 0x6e, 0x65, 0x6c,
	0x73, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x12, 0x1e, 0x0a, 0x0a, 0x6e, 0x75, 0x6d,
	0x4b, 0x65, 0x72, 0x6e, 0x65, 0x6c, 0x73, 0x18, 0x01, 0x20, 0x01, 0x28, 0x05, 0x52, 0x0a, 0x6e,
	0x75, 0x6d, 0x4b, 0x65, 0x72, 0x6e, 0x65, 0x6c, 0x73, 0x12, 0x3b, 0x0a, 0x07, 0x6b, 0x65, 0x72,
	0x6e, 0x65, 0x6c, 0x73, 0x18, 0x02, 0x20, 0x03, 0x28, 0x0b, 0x32, 0x21, 0x2e, 0x67, 0x61, 0x74,
	0x65, 0x77, 0x61, 0x79, 0x2e, 0x44, 0x69, 0x73, 0x74, 0x72, 0x69, 0x62, 0x75, 0x74, 0x65, 0x64,
	0x4a, 0x75, 0x70, 0x79, 0x74, 0x65, 0x72, 0x4b, 0x65, 0x72, 0x6e, 0x65, 0x6c, 0x52, 0x07, 0x6b,
	0x65, 0x72, 0x6e, 0x65, 0x6c, 0x73, 0x22, 0x1f, 0x0a, 0x0d, 0x50, 0x72, 0x6f, 0x76, 0x69, 0x73,
	0x69, 0x6f, 0x6e, 0x65, 0x72, 0x49, 0x64, 0x12, 0x0e, 0x0a, 0x02, 0x69, 0x64, 0x18, 0x01, 0x20,
	0x01, 0x28, 0x09, 0x52, 0x02, 0x69, 0x64, 0x22, 0x2e, 0x0a, 0x08, 0x48, 0x6f, 0x73, 0x74, 0x53,
	0x70, 0x65, 0x63, 0x12, 0x0e, 0x0a, 0x02, 0x69, 0x70, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x52,
	0x02, 0x69, 0x70, 0x12, 0x12, 0x0a, 0x04, 0x70, 0x6f, 0x72, 0x74, 0x18, 0x02, 0x20, 0x01, 0x28,
	0x05, 0x52, 0x04, 0x70, 0x6f, 0x72, 0x74, 0x22, 0x18, 0x0a, 0x06, 0x48, 0x6f, 0x73, 0x74, 0x49,
	0x64, 0x12, 0x0e, 0x0a, 0x02, 0x69, 0x64, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x52, 0x02, 0x69,
	0x64, 0x22, 0xc9, 0x01, 0x0a, 0x15, 0x56, 0x69, 0x72, 0x74, 0x75, 0x61, 0x6c, 0x47, 0x70, 0x75,
	0x41, 0x6c, 0x6c, 0x6f, 0x63, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x73, 0x12, 0x51, 0x0a, 0x0b, 0x61,
	0x6c, 0x6c, 0x6f, 0x63, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x73, 0x18, 0x01, 0x20, 0x03, 0x28, 0x0b,
	0x32, 0x2f, 0x2e, 0x67, 0x61, 0x74, 0x65, 0x77, 0x61, 0x79, 0x2e, 0x56, 0x69, 0x72, 0x74, 0x75,
	0x61, 0x6c, 0x47, 0x70, 0x75, 0x41, 0x6c, 0x6c, 0x6f, 0x63, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x73,
	0x2e, 0x41, 0x6c, 0x6c, 0x6f, 0x63, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x73, 0x45, 0x6e, 0x74, 0x72,
	0x79, 0x52, 0x0b, 0x61, 0x6c, 0x6c, 0x6f, 0x63, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x73, 0x1a, 0x5d,
	0x0a, 0x10, 0x41, 0x6c, 0x6c, 0x6f, 0x63, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x73, 0x45, 0x6e, 0x74,
	0x72, 0x79, 0x12, 0x10, 0x0a, 0x03, 0x6b, 0x65, 0x79, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x52,
	0x03, 0x6b, 0x65, 0x79, 0x12, 0x33, 0x0a, 0x05, 0x76, 0x61, 0x6c, 0x75, 0x65, 0x18, 0x02, 0x20,
	0x01, 0x28, 0x0b, 0x32, 0x1d, 0x2e, 0x67, 0x61, 0x74, 0x65, 0x77, 0x61, 0x79, 0x2e, 0x56, 0x69,
	0x72, 0x74, 0x75, 0x61, 0x6c, 0x47, 0x70, 0x75, 0x41, 0x6c, 0x6c, 0x6f, 0x63, 0x61, 0x74, 0x69,
	0x6f, 0x6e, 0x52, 0x05, 0x76, 0x61, 0x6c, 0x75, 0x65, 0x3a, 0x02, 0x38, 0x01, 0x22, 0x34, 0x0a,
	0x14, 0x56, 0x69, 0x72, 0x74, 0x75, 0x61, 0x6c, 0x47, 0x70, 0x75, 0x41, 0x6c, 0x6c, 0x6f, 0x63,
	0x61, 0x74, 0x69, 0x6f, 0x6e, 0x12, 0x1c, 0x0a, 0x09, 0x64, 0x65, 0x76, 0x69, 0x63, 0x65, 0x49,
	0x44, 0x73, 0x18, 0x01, 0x20, 0x03, 0x28, 0x09, 0x52, 0x09, 0x64, 0x65, 0x76, 0x69, 0x63, 0x65,
	0x49, 0x44, 0x73, 0x22, 0x2d, 0x0a, 0x15, 0x53, 0x65, 0x74, 0x56, 0x69, 0x72, 0x74, 0x75, 0x61,
	0x6c, 0x47, 0x50, 0x55, 0x73, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x12, 0x14, 0x0a, 0x05,
	0x76, 0x61, 0x6c, 0x75, 0x65, 0x18, 0x01, 0x20, 0x01, 0x28, 0x05, 0x52, 0x05, 0x76, 0x61, 0x6c,
	0x75, 0x65, 0x22, 0x9a, 0x01, 0x0a, 0x0e, 0x56, 0x69, 0x72, 0x74, 0x75, 0x61, 0x6c, 0x47, 0x70,
	0x75, 0x49, 0x6e, 0x66, 0x6f, 0x12, 0x2a, 0x0a, 0x10, 0x74, 0x6f, 0x74, 0x61, 0x6c, 0x56, 0x69,
	0x72, 0x74, 0x75, 0x61, 0x6c, 0x47, 0x50, 0x55, 0x73, 0x18, 0x01, 0x20, 0x01, 0x28, 0x05, 0x52,
	0x10, 0x74, 0x6f, 0x74, 0x61, 0x6c, 0x56, 0x69, 0x72, 0x74, 0x75, 0x61, 0x6c, 0x47, 0x50, 0x55,
	0x73, 0x12, 0x32, 0x0a, 0x14, 0x61, 0x6c, 0x6c, 0x6f, 0x63, 0x61, 0x74, 0x65, 0x64, 0x56, 0x69,
	0x72, 0x74, 0x75, 0x61, 0x6c, 0x47, 0x50, 0x55, 0x73, 0x18, 0x02, 0x20, 0x01, 0x28, 0x05, 0x52,
	0x14, 0x61, 0x6c, 0x6c, 0x6f, 0x63, 0x61, 0x74, 0x65, 0x64, 0x56, 0x69, 0x72, 0x74, 0x75, 0x61,
	0x6c, 0x47, 0x50, 0x55, 0x73, 0x12, 0x28, 0x0a, 0x0f, 0x66, 0x72, 0x65, 0x65, 0x56, 0x69, 0x72,
	0x74, 0x75, 0x61, 0x6c, 0x47, 0x50, 0x55, 0x73, 0x18, 0x03, 0x20, 0x01, 0x28, 0x05, 0x52, 0x0f,
	0x66, 0x72, 0x65, 0x65, 0x56, 0x69, 0x72, 0x74, 0x75, 0x61, 0x6c, 0x47, 0x50, 0x55, 0x73, 0x22,
	0xb5, 0x02, 0x0a, 0x07, 0x47, 0x70, 0x75, 0x49, 0x6e, 0x66, 0x6f, 0x12, 0x1a, 0x0a, 0x08, 0x73,
	0x70, 0x65, 0x63, 0x47, 0x50, 0x55, 0x73, 0x18, 0x01, 0x20, 0x01, 0x28, 0x05, 0x52, 0x08, 0x73,
	0x70, 0x65, 0x63, 0x47, 0x50, 0x55, 0x73, 0x12, 0x1a, 0x0a, 0x08, 0x69, 0x64, 0x6c, 0x65, 0x47,
	0x50, 0x55, 0x73, 0x18, 0x02, 0x20, 0x01, 0x28, 0x05, 0x52, 0x08, 0x69, 0x64, 0x6c, 0x65, 0x47,
	0x50, 0x55, 0x73, 0x12, 0x24, 0x0a, 0x0d, 0x63, 0x6f, 0x6d, 0x6d, 0x69, 0x74, 0x74, 0x65, 0x64,
	0x47, 0x50, 0x55, 0x73, 0x18, 0x03, 0x20, 0x01, 0x28, 0x05, 0x52, 0x0d, 0x63, 0x6f, 0x6d, 0x6d,
	0x69, 0x74, 0x74, 0x65, 0x64, 0x47, 0x50, 0x55, 0x73, 0x12, 0x20, 0x0a, 0x0b, 0x70, 0x65, 0x6e,
	0x64, 0x69, 0x6e, 0x67, 0x47, 0x50, 0x55, 0x73, 0x18, 0x04, 0x20, 0x01, 0x28, 0x05, 0x52, 0x0b,
	0x70, 0x65, 0x6e, 0x64, 0x69, 0x6e, 0x67, 0x47, 0x50, 0x55, 0x73, 0x12, 0x34, 0x0a, 0x15, 0x6e,
	0x75, 0x6d, 0x50, 0x65, 0x6e, 0x64, 0x69, 0x6e, 0x67, 0x41, 0x6c, 0x6c, 0x6f, 0x63, 0x61, 0x74,
	0x69, 0x6f, 0x6e, 0x73, 0x18, 0x05, 0x20, 0x01, 0x28, 0x05, 0x52, 0x15, 0x6e, 0x75, 0x6d, 0x50,
	0x65, 0x6e, 0x64, 0x69, 0x6e, 0x67, 0x41, 0x6c, 0x6c, 0x6f, 0x63, 0x61, 0x74, 0x69, 0x6f, 0x6e,
	0x73, 0x12, 0x26, 0x0a, 0x0e, 0x6e, 0x75, 0x6d, 0x41, 0x6c, 0x6c, 0x6f, 0x63, 0x61, 0x74, 0x69,
	0x6f, 0x6e, 0x73, 0x18, 0x06, 0x20, 0x01, 0x28, 0x05, 0x52, 0x0e, 0x6e, 0x75, 0x6d, 0x41, 0x6c,
	0x6c, 0x6f, 0x63, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x73, 0x12, 0x26, 0x0a, 0x0e, 0x67, 0x70, 0x75,
	0x53, 0x63, 0x68, 0x65, 0x64, 0x75, 0x6c, 0x65, 0x72, 0x49, 0x44, 0x18, 0x07, 0x20, 0x01, 0x28,
	0x09, 0x52, 0x0e, 0x67, 0x70, 0x75, 0x53, 0x63, 0x68, 0x65, 0x64, 0x75, 0x6c, 0x65, 0x72, 0x49,
	0x44, 0x12, 0x24, 0x0a, 0x0d, 0x6c, 0x6f, 0x63, 0x61, 0x6c, 0x44, 0x61, 0x65, 0x6d, 0x6f, 0x6e,
	0x49, 0x44, 0x18, 0x08, 0x20, 0x01, 0x28, 0x09, 0x52, 0x0d, 0x6c, 0x6f, 0x63, 0x61, 0x6c, 0x44,
	0x61, 0x65, 0x6d, 0x6f, 0x6e, 0x49, 0x44, 0x22, 0xea, 0x01, 0x0a, 0x11, 0x4b, 0x65, 0x72, 0x6e,
	0x65, 0x6c, 0x52, 0x65, 0x70, 0x6c, 0x69, 0x63, 0x61, 0x53, 0x70, 0x65, 0x63, 0x12, 0x2b, 0x0a,
	0x06, 0x6b, 0x65, 0x72, 0x6e, 0x65, 0x6c, 0x18, 0x01, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x13, 0x2e,
	0x67, 0x61, 0x74, 0x65, 0x77, 0x61, 0x79, 0x2e, 0x4b, 0x65, 0x72, 0x6e, 0x65, 0x6c, 0x53, 0x70,
	0x65, 0x63, 0x52, 0x06, 0x6b, 0x65, 0x72, 0x6e, 0x65, 0x6c, 0x12, 0x1c, 0x0a, 0x09, 0x72, 0x65,
	0x70, 0x6c, 0x69, 0x63, 0x61, 0x49, 0x64, 0x18, 0x02, 0x20, 0x01, 0x28, 0x05, 0x52, 0x09, 0x72,
	0x65, 0x70, 0x6c, 0x69, 0x63, 0x61, 0x49, 0x64, 0x12, 0x20, 0x0a, 0x0b, 0x6e, 0x75, 0x6d, 0x52,
	0x65, 0x70, 0x6c, 0x69, 0x63, 0x61, 0x73, 0x18, 0x03, 0x20, 0x01, 0x28, 0x05, 0x52, 0x0b, 0x6e,
	0x75, 0x6d, 0x52, 0x65, 0x70, 0x6c, 0x69, 0x63, 0x61, 0x73, 0x12, 0x1a, 0x0a, 0x08, 0x72, 0x65,
	0x70, 0x6c, 0x69, 0x63, 0x61, 0x73, 0x18, 0x04, 0x20, 0x03, 0x28, 0x09, 0x52, 0x08, 0x72, 0x65,
	0x70, 0x6c, 0x69, 0x63, 0x61, 0x73, 0x12, 0x12, 0x0a, 0x04, 0x6a, 0x6f, 0x69, 0x6e, 0x18, 0x05,
	0x20, 0x01, 0x28, 0x08, 0x52, 0x04, 0x6a, 0x6f, 0x69, 0x6e, 0x12, 0x27, 0x0a, 0x0c, 0x70, 0x65,
	0x72, 0x73, 0x69, 0x73, 0x74, 0x65, 0x6e, 0x74, 0x49, 0x64, 0x18, 0x06, 0x20, 0x01, 0x28, 0x09,
	0x48, 0x00, 0x52, 0x0c, 0x70, 0x65, 0x72, 0x73, 0x69, 0x73, 0x74, 0x65, 0x6e, 0x74, 0x49, 0x64,
	0x88, 0x01, 0x01, 0x42, 0x0f, 0x0a, 0x0d, 0x5f, 0x70, 0x65, 0x72, 0x73, 0x69, 0x73, 0x74, 0x65,
	0x6e, 0x74, 0x49, 0x64, 0x22, 0x4a, 0x0a, 0x0c, 0x52, 0x65, 0x73, 0x6f, 0x75, 0x72, 0x63, 0x65,
	0x53, 0x70, 0x65, 0x63, 0x12, 0x10, 0x0a, 0x03, 0x63, 0x70, 0x75, 0x18, 0x01, 0x20, 0x01, 0x28,
	0x05, 0x52, 0x03, 0x63, 0x70, 0x75, 0x12, 0x16, 0x0a, 0x06, 0x6d, 0x65, 0x6d, 0x6f, 0x72, 0x79,
	0x18, 0x02, 0x20, 0x01, 0x28, 0x05, 0x52, 0x06, 0x6d, 0x65, 0x6d, 0x6f, 0x72, 0x79, 0x12, 0x10,
	0x0a, 0x03, 0x67, 0x70, 0x75, 0x18, 0x03, 0x20, 0x01, 0x28, 0x05, 0x52, 0x03, 0x67, 0x70, 0x75,
	0x22, 0x7f, 0x0a, 0x08, 0x4b, 0x65, 0x72, 0x6e, 0x65, 0x6c, 0x49, 0x64, 0x12, 0x0e, 0x0a, 0x02,
	0x69, 0x64, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x52, 0x02, 0x69, 0x64, 0x12, 0x1d, 0x0a, 0x07,
	0x72, 0x65, 0x73, 0x74, 0x61, 0x72, 0x74, 0x18, 0x02, 0x20, 0x01, 0x28, 0x08, 0x48, 0x00, 0x52,
	0x07, 0x72, 0x65, 0x73, 0x74, 0x61, 0x72, 0x74, 0x88, 0x01, 0x01, 0x12, 0x27, 0x0a, 0x0c, 0x70,
	0x65, 0x72, 0x73, 0x69, 0x73, 0x74, 0x65, 0x6e, 0x74, 0x49, 0x64, 0x18, 0x03, 0x20, 0x01, 0x28,
	0x09, 0x48, 0x01, 0x52, 0x0c, 0x70, 0x65, 0x72, 0x73, 0x69, 0x73, 0x74, 0x65, 0x6e, 0x74, 0x49,
	0x64, 0x88, 0x01, 0x01, 0x42, 0x0a, 0x0a, 0x08, 0x5f, 0x72, 0x65, 0x73, 0x74, 0x61, 0x72, 0x74,
	0x42, 0x0f, 0x0a, 0x0d, 0x5f, 0x70, 0x65, 0x72, 0x73, 0x69, 0x73, 0x74, 0x65, 0x6e, 0x74, 0x49,
	0x64, 0x22, 0x6b, 0x0a, 0x0b, 0x52, 0x65, 0x70, 0x6c, 0x69, 0x63, 0x61, 0x49, 0x6e, 0x66, 0x6f,
	0x12, 0x1a, 0x0a, 0x08, 0x6b, 0x65, 0x72, 0x6e, 0x65, 0x6c, 0x49, 0x64, 0x18, 0x01, 0x20, 0x01,
	0x28, 0x09, 0x52, 0x08, 0x6b, 0x65, 0x72, 0x6e, 0x65, 0x6c, 0x49, 0x64, 0x12, 0x1c, 0x0a, 0x09,
	0x72, 0x65, 0x70, 0x6c, 0x69, 0x63, 0x61, 0x49, 0x64, 0x18, 0x02, 0x20, 0x01, 0x28, 0x05, 0x52,
	0x09, 0x72, 0x65, 0x70, 0x6c, 0x69, 0x63, 0x61, 0x49, 0x64, 0x12, 0x22, 0x0a, 0x0c, 0x70, 0x65,
	0x72, 0x73, 0x69, 0x73, 0x74, 0x65, 0x6e, 0x74, 0x49, 0x64, 0x18, 0x03, 0x20, 0x01, 0x28, 0x09,
	0x52, 0x0c, 0x70, 0x65, 0x72, 0x73, 0x69, 0x73, 0x74, 0x65, 0x6e, 0x74, 0x49, 0x64, 0x22, 0x88,
	0x01, 0x0a, 0x10, 0x4d, 0x69, 0x67, 0x72, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x52, 0x65, 0x71, 0x75,
	0x65, 0x73, 0x74, 0x12, 0x3a, 0x0a, 0x0d, 0x74, 0x61, 0x72, 0x67, 0x65, 0x74, 0x52, 0x65, 0x70,
	0x6c, 0x69, 0x63, 0x61, 0x18, 0x01, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x14, 0x2e, 0x67, 0x61, 0x74,
	0x65, 0x77, 0x61, 0x79, 0x2e, 0x52, 0x65, 0x70, 0x6c, 0x69, 0x63, 0x61, 0x49, 0x6e, 0x66, 0x6f,
	0x52, 0x0d, 0x74, 0x61, 0x72, 0x67, 0x65, 0x74, 0x52, 0x65, 0x70, 0x6c, 0x69, 0x63, 0x61, 0x12,
	0x27, 0x0a, 0x0c, 0x74, 0x61, 0x72, 0x67, 0x65, 0x74, 0x4e, 0x6f, 0x64, 0x65, 0x49, 0x64, 0x18,
	0x02, 0x20, 0x01, 0x28, 0x09, 0x48, 0x00, 0x52, 0x0c, 0x74, 0x61, 0x72, 0x67, 0x65, 0x74, 0x4e,
	0x6f, 0x64, 0x65, 0x49, 0x64, 0x88, 0x01, 0x01, 0x42, 0x0f, 0x0a, 0x0d, 0x5f, 0x74, 0x61, 0x72,
	0x67, 0x65, 0x74, 0x4e, 0x6f, 0x64, 0x65, 0x49, 0x64, 0x22, 0x8e, 0x01, 0x0a, 0x14, 0x53, 0x6d,
	0x72, 0x52, 0x65, 0x61, 0x64, 0x79, 0x4e, 0x6f, 0x74, 0x69, 0x66, 0x69, 0x63, 0x61, 0x74, 0x69,
	0x6f, 0x6e, 0x12, 0x1a, 0x0a, 0x08, 0x6b, 0x65, 0x72, 0x6e, 0x65, 0x6c, 0x49, 0x64, 0x18, 0x01,
	0x20, 0x01, 0x28, 0x09, 0x52, 0x08, 0x6b, 0x65, 0x72, 0x6e, 0x65, 0x6c, 0x49, 0x64, 0x12, 0x1c,
	0x0a, 0x09, 0x72, 0x65, 0x70, 0x6c, 0x69, 0x63, 0x61, 0x49, 0x64, 0x18, 0x02, 0x20, 0x01, 0x28,
	0x05, 0x52, 0x09, 0x72, 0x65, 0x70, 0x6c, 0x69, 0x63, 0x61, 0x49, 0x64, 0x12, 0x22, 0x0a, 0x0c,
	0x70, 0x65, 0x72, 0x73, 0x69, 0x73, 0x74, 0x65, 0x6e, 0x74, 0x49, 0x64, 0x18, 0x03, 0x20, 0x01,
	0x28, 0x09, 0x52, 0x0c, 0x70, 0x65, 0x72, 0x73, 0x69, 0x73, 0x74, 0x65, 0x6e, 0x74, 0x49, 0x64,
	0x12, 0x18, 0x0a, 0x07, 0x61, 0x64, 0x64, 0x72, 0x65, 0x73, 0x73, 0x18, 0x04, 0x20, 0x01, 0x28,
	0x09, 0x52, 0x07, 0x61, 0x64, 0x64, 0x72, 0x65, 0x73, 0x73, 0x22, 0x1b, 0x0a, 0x09, 0x52, 0x65,
	0x70, 0x6c, 0x69, 0x63, 0x61, 0x49, 0x64, 0x12, 0x0e, 0x0a, 0x02, 0x69, 0x64, 0x18, 0x01, 0x20,
	0x01, 0x28, 0x05, 0x52, 0x02, 0x69, 0x64, 0x22, 0x60, 0x0a, 0x18, 0x50, 0x72, 0x65, 0x70, 0x61,
	0x72, 0x65, 0x54, 0x6f, 0x4d, 0x69, 0x67, 0x72, 0x61, 0x74, 0x65, 0x52, 0x65, 0x73, 0x70, 0x6f,
	0x6e, 0x73, 0x65, 0x12, 0x0e, 0x0a, 0x02, 0x69, 0x64, 0x18, 0x01, 0x20, 0x01, 0x28, 0x05, 0x52,
	0x02, 0x69, 0x64, 0x12, 0x1a, 0x0a, 0x08, 0x6b, 0x65, 0x72, 0x6e, 0x65, 0x6c, 0x49, 0x64, 0x18,
	0x02, 0x20, 0x01, 0x28, 0x09, 0x52, 0x08, 0x6b, 0x65, 0x72, 0x6e, 0x65, 0x6c, 0x49, 0x64, 0x12,
	0x18, 0x0a, 0x07, 0x64, 0x61, 0x74, 0x61, 0x44, 0x69, 0x72, 0x18, 0x03, 0x20, 0x01, 0x28, 0x09,
	0x52, 0x07, 0x64, 0x61, 0x74, 0x61, 0x44, 0x69, 0x72, 0x22, 0x43, 0x0a, 0x15, 0x4d, 0x69, 0x67,
	0x72, 0x61, 0x74, 0x65, 0x4b, 0x65, 0x72, 0x6e, 0x65, 0x6c, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e,
	0x73, 0x65, 0x12, 0x0e, 0x0a, 0x02, 0x69, 0x64, 0x18, 0x01, 0x20, 0x01, 0x28, 0x05, 0x52, 0x02,
	0x69, 0x64, 0x12, 0x1a, 0x0a, 0x08, 0x68, 0x6f, 0x73, 0x74, 0x6e, 0x61, 0x6d, 0x65, 0x18, 0x02,
	0x20, 0x01, 0x28, 0x09, 0x52, 0x08, 0x68, 0x6f, 0x73, 0x74, 0x6e, 0x61, 0x6d, 0x65, 0x22, 0x5d,
	0x0a, 0x13, 0x52, 0x65, 0x70, 0x6c, 0x69, 0x63, 0x61, 0x49, 0x6e, 0x66, 0x6f, 0x57, 0x69, 0x74,
	0x68, 0x41, 0x64, 0x64, 0x72, 0x12, 0x0e, 0x0a, 0x02, 0x69, 0x64, 0x18, 0x01, 0x20, 0x01, 0x28,
	0x05, 0x52, 0x02, 0x69, 0x64, 0x12, 0x1a, 0x0a, 0x08, 0x68, 0x6f, 0x73, 0x74, 0x6e, 0x61, 0x6d,
	0x65, 0x18, 0x02, 0x20, 0x01, 0x28, 0x09, 0x52, 0x08, 0x68, 0x6f, 0x73, 0x74, 0x6e, 0x61, 0x6d,
	0x65, 0x12, 0x1a, 0x0a, 0x08, 0x6b, 0x65, 0x72, 0x6e, 0x65, 0x6c, 0x49, 0x64, 0x18, 0x03, 0x20,
	0x01, 0x28, 0x09, 0x52, 0x08, 0x6b, 0x65, 0x72, 0x6e, 0x65, 0x6c, 0x49, 0x64, 0x22, 0xb9, 0x01,
	0x0a, 0x0a, 0x4b, 0x65, 0x72, 0x6e, 0x65, 0x6c, 0x53, 0x70, 0x65, 0x63, 0x12, 0x0e, 0x0a, 0x02,
	0x69, 0x64, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x52, 0x02, 0x69, 0x64, 0x12, 0x18, 0x0a, 0x07,
	0x73, 0x65, 0x73, 0x73, 0x69, 0x6f, 0x6e, 0x18, 0x02, 0x20, 0x01, 0x28, 0x09, 0x52, 0x07, 0x73,
	0x65, 0x73, 0x73, 0x69, 0x6f, 0x6e, 0x12, 0x12, 0x0a, 0x04, 0x61, 0x72, 0x67, 0x76, 0x18, 0x03,
	0x20, 0x03, 0x28, 0x09, 0x52, 0x04, 0x61, 0x72, 0x67, 0x76, 0x12, 0x28, 0x0a, 0x0f, 0x73, 0x69,
	0x67, 0x6e, 0x61, 0x74, 0x75, 0x72, 0x65, 0x53, 0x63, 0x68, 0x65, 0x6d, 0x65, 0x18, 0x04, 0x20,
	0x01, 0x28, 0x09, 0x52, 0x0f, 0x73, 0x69, 0x67, 0x6e, 0x61, 0x74, 0x75, 0x72, 0x65, 0x53, 0x63,
	0x68, 0x65, 0x6d, 0x65, 0x12, 0x10, 0x0a, 0x03, 0x6b, 0x65, 0x79, 0x18, 0x05, 0x20, 0x01, 0x28,
	0x09, 0x52, 0x03, 0x6b, 0x65, 0x79, 0x12, 0x31, 0x0a, 0x08, 0x72, 0x65, 0x73, 0x6f, 0x75, 0x72,
	0x63, 0x65, 0x18, 0x06, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x15, 0x2e, 0x67, 0x61, 0x74, 0x65, 0x77,
	0x61, 0x79, 0x2e, 0x52, 0x65, 0x73, 0x6f, 0x75, 0x72, 0x63, 0x65, 0x53, 0x70, 0x65, 0x63, 0x52,
	0x08, 0x72, 0x65, 0x73, 0x6f, 0x75, 0x72, 0x63, 0x65, 0x22, 0xb2, 0x02, 0x0a, 0x14, 0x4b, 0x65,
	0x72, 0x6e, 0x65, 0x6c, 0x43, 0x6f, 0x6e, 0x6e, 0x65, 0x63, 0x74, 0x69, 0x6f, 0x6e, 0x49, 0x6e,
	0x66, 0x6f, 0x12, 0x0e, 0x0a, 0x02, 0x69, 0x70, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x52, 0x02,
	0x69, 0x70, 0x12, 0x1c, 0x0a, 0x09, 0x74, 0x72, 0x61, 0x6e, 0x73, 0x70, 0x6f, 0x72, 0x74, 0x18,
	0x02, 0x20, 0x01, 0x28, 0x09, 0x52, 0x09, 0x74, 0x72, 0x61, 0x6e, 0x73, 0x70, 0x6f, 0x72, 0x74,
	0x12, 0x20, 0x0a, 0x0b, 0x63, 0x6f, 0x6e, 0x74, 0x72, 0x6f, 0x6c, 0x50, 0x6f, 0x72, 0x74, 0x18,
	0x03, 0x20, 0x01, 0x28, 0x05, 0x52, 0x0b, 0x63, 0x6f, 0x6e, 0x74, 0x72, 0x6f, 0x6c, 0x50, 0x6f,
	0x72, 0x74, 0x12, 0x1c, 0x0a, 0x09, 0x73, 0x68, 0x65, 0x6c, 0x6c, 0x50, 0x6f, 0x72, 0x74, 0x18,
	0x04, 0x20, 0x01, 0x28, 0x05, 0x52, 0x09, 0x73, 0x68, 0x65, 0x6c, 0x6c, 0x50, 0x6f, 0x72, 0x74,
	0x12, 0x1c, 0x0a, 0x09, 0x73, 0x74, 0x64, 0x69, 0x6e, 0x50, 0x6f, 0x72, 0x74, 0x18, 0x05, 0x20,
	0x01, 0x28, 0x05, 0x52, 0x09, 0x73, 0x74, 0x64, 0x69, 0x6e, 0x50, 0x6f, 0x72, 0x74, 0x12, 0x16,
	0x0a, 0x06, 0x68, 0x62, 0x50, 0x6f, 0x72, 0x74, 0x18, 0x06, 0x20, 0x01, 0x28, 0x05, 0x52, 0x06,
	0x68, 0x62, 0x50, 0x6f, 0x72, 0x74, 0x12, 0x1c, 0x0a, 0x09, 0x69, 0x6f, 0x70, 0x75, 0x62, 0x50,
	0x6f, 0x72, 0x74, 0x18, 0x07, 0x20, 0x01, 0x28, 0x05, 0x52, 0x09, 0x69, 0x6f, 0x70, 0x75, 0x62,
	0x50, 0x6f, 0x72, 0x74, 0x12, 0x1c, 0x0a, 0x09, 0x69, 0x6f, 0x73, 0x75, 0x62, 0x50, 0x6f, 0x72,
	0x74, 0x18, 0x08, 0x20, 0x01, 0x28, 0x05, 0x52, 0x09, 0x69, 0x6f, 0x73, 0x75, 0x62, 0x50, 0x6f,
	0x72, 0x74, 0x12, 0x28, 0x0a, 0x0f, 0x73, 0x69, 0x67, 0x6e, 0x61, 0x74, 0x75, 0x72, 0x65, 0x53,
	0x63, 0x68, 0x65, 0x6d, 0x65, 0x18, 0x09, 0x20, 0x01, 0x28, 0x09, 0x52, 0x0f, 0x73, 0x69, 0x67,
	0x6e, 0x61, 0x74, 0x75, 0x72, 0x65, 0x53, 0x63, 0x68, 0x65, 0x6d, 0x65, 0x12, 0x10, 0x0a, 0x03,
	0x6b, 0x65, 0x79, 0x18, 0x0a, 0x20, 0x01, 0x28, 0x09, 0x52, 0x03, 0x6b, 0x65, 0x79, 0x22, 0xa9,
	0x02, 0x0a, 0x1e, 0x4b, 0x65, 0x72, 0x6e, 0x65, 0x6c, 0x52, 0x65, 0x67, 0x69, 0x73, 0x74, 0x72,
	0x61, 0x74, 0x69, 0x6f, 0x6e, 0x4e, 0x6f, 0x74, 0x69, 0x66, 0x69, 0x63, 0x61, 0x74, 0x69, 0x6f,
	0x6e, 0x12, 0x45, 0x0a, 0x0e, 0x63, 0x6f, 0x6e, 0x6e, 0x65, 0x63, 0x74, 0x69, 0x6f, 0x6e, 0x49,
	0x6e, 0x66, 0x6f, 0x18, 0x01, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x1d, 0x2e, 0x67, 0x61, 0x74, 0x65,
	0x77, 0x61, 0x79, 0x2e, 0x4b, 0x65, 0x72, 0x6e, 0x65, 0x6c, 0x43, 0x6f, 0x6e, 0x6e, 0x65, 0x63,
	0x74, 0x69, 0x6f, 0x6e, 0x49, 0x6e, 0x66, 0x6f, 0x52, 0x0e, 0x63, 0x6f, 0x6e, 0x6e, 0x65, 0x63,
	0x74, 0x69, 0x6f, 0x6e, 0x49, 0x6e, 0x66, 0x6f, 0x12, 0x1a, 0x0a, 0x08, 0x6b, 0x65, 0x72, 0x6e,
	0x65, 0x6c, 0x49, 0x64, 0x18, 0x02, 0x20, 0x01, 0x28, 0x09, 0x52, 0x08, 0x6b, 0x65, 0x72, 0x6e,
	0x65, 0x6c, 0x49, 0x64, 0x12, 0x1c, 0x0a, 0x09, 0x73, 0x65, 0x73, 0x73, 0x69, 0x6f, 0x6e, 0x49,
	0x64, 0x18, 0x03, 0x20, 0x01, 0x28, 0x09, 0x52, 0x09, 0x73, 0x65, 0x73, 0x73, 0x69, 0x6f, 0x6e,
	0x49, 0x64, 0x12, 0x16, 0x0a, 0x06, 0x68, 0x6f, 0x73, 0x74, 0x49, 0x64, 0x18, 0x04, 0x20, 0x01,
	0x28, 0x09, 0x52, 0x06, 0x68, 0x6f, 0x73, 0x74, 0x49, 0x64, 0x12, 0x1c, 0x0a, 0x09, 0x72, 0x65,
	0x70, 0x6c, 0x69, 0x63, 0x61, 0x49, 0x64, 0x18, 0x05, 0x20, 0x01, 0x28, 0x05, 0x52, 0x09, 0x72,
	0x65, 0x70, 0x6c, 0x69, 0x63, 0x61, 0x49, 0x64, 0x12, 0x1a, 0x0a, 0x08, 0x6b, 0x65, 0x72, 0x6e,
	0x65, 0x6c, 0x49, 0x70, 0x18, 0x06, 0x20, 0x01, 0x28, 0x09, 0x52, 0x08, 0x6b, 0x65, 0x72, 0x6e,
	0x65, 0x6c, 0x49, 0x70, 0x12, 0x18, 0x0a, 0x07, 0x70, 0x6f, 0x64, 0x4e, 0x61, 0x6d, 0x65, 0x18,
	0x07, 0x20, 0x01, 0x28, 0x09, 0x52, 0x07, 0x70, 0x6f, 0x64, 0x4e, 0x61, 0x6d, 0x65, 0x12, 0x1a,
	0x0a, 0x08, 0x6e, 0x6f, 0x64, 0x65, 0x4e, 0x61, 0x6d, 0x65, 0x18, 0x08, 0x20, 0x01, 0x28, 0x09,
	0x52, 0x08, 0x6e, 0x6f, 0x64, 0x65, 0x4e, 0x61, 0x6d, 0x65, 0x22, 0xe1, 0x02, 0x0a, 0x26, 0x4b,
	0x65, 0x72, 0x6e, 0x65, 0x6c, 0x52, 0x65, 0x67, 0x69, 0x73, 0x74, 0x72, 0x61, 0x74, 0x69, 0x6f,
	0x6e, 0x4e, 0x6f, 0x74, 0x69, 0x66, 0x69, 0x63, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x52, 0x65, 0x73,
	0x70, 0x6f, 0x6e, 0x73, 0x65, 0x12, 0x0e, 0x0a, 0x02, 0x69, 0x64, 0x18, 0x01, 0x20, 0x01, 0x28,
	0x05, 0x52, 0x02, 0x69, 0x64, 0x12, 0x59, 0x0a, 0x08, 0x72, 0x65, 0x70, 0x6c, 0x69, 0x63, 0x61,
	0x73, 0x18, 0x02, 0x20, 0x03, 0x28, 0x0b, 0x32, 0x3d, 0x2e, 0x67, 0x61, 0x74, 0x65, 0x77, 0x61,
	0x79, 0x2e, 0x4b, 0x65, 0x72, 0x6e, 0x65, 0x6c, 0x52, 0x65, 0x67, 0x69, 0x73, 0x74, 0x72, 0x61,
	0x74, 0x69, 0x6f, 0x6e, 0x4e, 0x6f, 0x74, 0x69, 0x66, 0x69, 0x63, 0x61, 0x74, 0x69, 0x6f, 0x6e,
	0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x2e, 0x52, 0x65, 0x70, 0x6c, 0x69, 0x63, 0x61,
	0x73, 0x45, 0x6e, 0x74, 0x72, 0x79, 0x52, 0x08, 0x72, 0x65, 0x70, 0x6c, 0x69, 0x63, 0x61, 0x73,
	0x12, 0x27, 0x0a, 0x0c, 0x70, 0x65, 0x72, 0x73, 0x69, 0x73, 0x74, 0x65, 0x6e, 0x74, 0x49, 0x64,
	0x18, 0x03, 0x20, 0x01, 0x28, 0x09, 0x48, 0x00, 0x52, 0x0c, 0x70, 0x65, 0x72, 0x73, 0x69, 0x73,
	0x74, 0x65, 0x6e, 0x74, 0x49, 0x64, 0x88, 0x01, 0x01, 0x12, 0x18, 0x0a, 0x07, 0x73, 0x6d, 0x72,
	0x50, 0x6f, 0x72, 0x74, 0x18, 0x04, 0x20, 0x01, 0x28, 0x05, 0x52, 0x07, 0x73, 0x6d, 0x72, 0x50,
	0x6f, 0x72, 0x74, 0x12, 0x29, 0x0a, 0x0d, 0x64, 0x61, 0x74, 0x61, 0x44, 0x69, 0x72, 0x65, 0x63,
	0x74, 0x6f, 0x72, 0x79, 0x18, 0x05, 0x20, 0x01, 0x28, 0x09, 0x48, 0x01, 0x52, 0x0d, 0x64, 0x61,
	0x74, 0x61, 0x44, 0x69, 0x72, 0x65, 0x63, 0x74, 0x6f, 0x72, 0x79, 0x88, 0x01, 0x01, 0x1a, 0x3b,
	0x0a, 0x0d, 0x52, 0x65, 0x70, 0x6c, 0x69, 0x63, 0x61, 0x73, 0x45, 0x6e, 0x74, 0x72, 0x79, 0x12,
	0x10, 0x0a, 0x03, 0x6b, 0x65, 0x79, 0x18, 0x01, 0x20, 0x01, 0x28, 0x05, 0x52, 0x03, 0x6b, 0x65,
	0x79, 0x12, 0x14, 0x0a, 0x05, 0x76, 0x61, 0x6c, 0x75, 0x65, 0x18, 0x02, 0x20, 0x01, 0x28, 0x09,
	0x52, 0x05, 0x76, 0x61, 0x6c, 0x75, 0x65, 0x3a, 0x02, 0x38, 0x01, 0x42, 0x0f, 0x0a, 0x0d, 0x5f,
	0x70, 0x65, 0x72, 0x73, 0x69, 0x73, 0x74, 0x65, 0x6e, 0x74, 0x49, 0x64, 0x42, 0x10, 0x0a, 0x0e,
	0x5f, 0x64, 0x61, 0x74, 0x61, 0x44, 0x69, 0x72, 0x65, 0x63, 0x74, 0x6f, 0x72, 0x79, 0x22, 0x26,
	0x0a, 0x0c, 0x4b, 0x65, 0x72, 0x6e, 0x65, 0x6c, 0x53, 0x74, 0x61, 0x74, 0x75, 0x73, 0x12, 0x16,
	0x0a, 0x06, 0x73, 0x74, 0x61, 0x74, 0x75, 0x73, 0x18, 0x01, 0x20, 0x01, 0x28, 0x05, 0x52, 0x06,
	0x73, 0x74, 0x61, 0x74, 0x75, 0x73, 0x22, 0x06, 0x0a, 0x04, 0x56, 0x6f, 0x69, 0x64, 0x32, 0xeb,
	0x03, 0x0a, 0x0e, 0x43, 0x6c, 0x75, 0x73, 0x74, 0x65, 0x72, 0x47, 0x61, 0x74, 0x65, 0x77, 0x61,
	0x79, 0x12, 0x2d, 0x0a, 0x02, 0x49, 0x44, 0x12, 0x0d, 0x2e, 0x67, 0x61, 0x74, 0x65, 0x77, 0x61,
	0x79, 0x2e, 0x56, 0x6f, 0x69, 0x64, 0x1a, 0x16, 0x2e, 0x67, 0x61, 0x74, 0x65, 0x77, 0x61, 0x79,
	0x2e, 0x50, 0x72, 0x6f, 0x76, 0x69, 0x73, 0x69, 0x6f, 0x6e, 0x65, 0x72, 0x49, 0x64, 0x22, 0x00,
	0x12, 0x2e, 0x0a, 0x0a, 0x52, 0x65, 0x6d, 0x6f, 0x76, 0x65, 0x48, 0x6f, 0x73, 0x74, 0x12, 0x0f,
	0x2e, 0x67, 0x61, 0x74, 0x65, 0x77, 0x61, 0x79, 0x2e, 0x48, 0x6f, 0x73, 0x74, 0x49, 0x64, 0x1a,
	0x0d, 0x2e, 0x67, 0x61, 0x74, 0x65, 0x77, 0x61, 0x79, 0x2e, 0x56, 0x6f, 0x69, 0x64, 0x22, 0x00,
	0x12, 0x53, 0x0a, 0x14, 0x4d, 0x69, 0x67, 0x72, 0x61, 0x74, 0x65, 0x4b, 0x65, 0x72, 0x6e, 0x65,
	0x6c, 0x52, 0x65, 0x70, 0x6c, 0x69, 0x63, 0x61, 0x12, 0x19, 0x2e, 0x67, 0x61, 0x74, 0x65, 0x77,
	0x61, 0x79, 0x2e, 0x4d, 0x69, 0x67, 0x72, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x52, 0x65, 0x71, 0x75,
	0x65, 0x73, 0x74, 0x1a, 0x1e, 0x2e, 0x67, 0x61, 0x74, 0x65, 0x77, 0x61, 0x79, 0x2e, 0x4d, 0x69,
	0x67, 0x72, 0x61, 0x74, 0x65, 0x4b, 0x65, 0x72, 0x6e, 0x65, 0x6c, 0x52, 0x65, 0x73, 0x70, 0x6f,
	0x6e, 0x73, 0x65, 0x22, 0x00, 0x12, 0x74, 0x0a, 0x16, 0x4e, 0x6f, 0x74, 0x69, 0x66, 0x79, 0x4b,
	0x65, 0x72, 0x6e, 0x65, 0x6c, 0x52, 0x65, 0x67, 0x69, 0x73, 0x74, 0x65, 0x72, 0x65, 0x64, 0x12,
	0x27, 0x2e, 0x67, 0x61, 0x74, 0x65, 0x77, 0x61, 0x79, 0x2e, 0x4b, 0x65, 0x72, 0x6e, 0x65, 0x6c,
	0x52, 0x65, 0x67, 0x69, 0x73, 0x74, 0x72, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x4e, 0x6f, 0x74, 0x69,
	0x66, 0x69, 0x63, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x1a, 0x2f, 0x2e, 0x67, 0x61, 0x74, 0x65, 0x77,
	0x61, 0x79, 0x2e, 0x4b, 0x65, 0x72, 0x6e, 0x65, 0x6c, 0x52, 0x65, 0x67, 0x69, 0x73, 0x74, 0x72,
	0x61, 0x74, 0x69, 0x6f, 0x6e, 0x4e, 0x6f, 0x74, 0x69, 0x66, 0x69, 0x63, 0x61, 0x74, 0x69, 0x6f,
	0x6e, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x22, 0x00, 0x12, 0x3a, 0x0a, 0x08, 0x53,
	0x6d, 0x72, 0x52, 0x65, 0x61, 0x64, 0x79, 0x12, 0x1d, 0x2e, 0x67, 0x61, 0x74, 0x65, 0x77, 0x61,
	0x79, 0x2e, 0x53, 0x6d, 0x72, 0x52, 0x65, 0x61, 0x64, 0x79, 0x4e, 0x6f, 0x74, 0x69, 0x66, 0x69,
	0x63, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x1a, 0x0d, 0x2e, 0x67, 0x61, 0x74, 0x65, 0x77, 0x61, 0x79,
	0x2e, 0x56, 0x6f, 0x69, 0x64, 0x22, 0x00, 0x12, 0x35, 0x0a, 0x0c, 0x53, 0x6d, 0x72, 0x4e, 0x6f,
	0x64, 0x65, 0x41, 0x64, 0x64, 0x65, 0x64, 0x12, 0x14, 0x2e, 0x67, 0x61, 0x74, 0x65, 0x77, 0x61,
	0x79, 0x2e, 0x52, 0x65, 0x70, 0x6c, 0x69, 0x63, 0x61, 0x49, 0x6e, 0x66, 0x6f, 0x1a, 0x0d, 0x2e,
	0x67, 0x61, 0x74, 0x65, 0x77, 0x61, 0x79, 0x2e, 0x56, 0x6f, 0x69, 0x64, 0x22, 0x00, 0x12, 0x3c,
	0x0a, 0x0b, 0x4c, 0x69, 0x73, 0x74, 0x4b, 0x65, 0x72, 0x6e, 0x65, 0x6c, 0x73, 0x12, 0x0d, 0x2e,
	0x67, 0x61, 0x74, 0x65, 0x77, 0x61, 0x79, 0x2e, 0x56, 0x6f, 0x69, 0x64, 0x1a, 0x1c, 0x2e, 0x67,
	0x61, 0x74, 0x65, 0x77, 0x61, 0x79, 0x2e, 0x4c, 0x69, 0x73, 0x74, 0x4b, 0x65, 0x72, 0x6e, 0x65,
	0x6c, 0x73, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x22, 0x00, 0x32, 0xb8, 0x07, 0x0a,
	0x0c, 0x4c, 0x6f, 0x63, 0x61, 0x6c, 0x47, 0x61, 0x74, 0x65, 0x77, 0x61, 0x79, 0x12, 0x2b, 0x0a,
	0x05, 0x53, 0x65, 0x74, 0x49, 0x44, 0x12, 0x0f, 0x2e, 0x67, 0x61, 0x74, 0x65, 0x77, 0x61, 0x79,
	0x2e, 0x48, 0x6f, 0x73, 0x74, 0x49, 0x64, 0x1a, 0x0f, 0x2e, 0x67, 0x61, 0x74, 0x65, 0x77, 0x61,
	0x79, 0x2e, 0x48, 0x6f, 0x73, 0x74, 0x49, 0x64, 0x22, 0x00, 0x12, 0x43, 0x0a, 0x0b, 0x53, 0x74,
	0x61, 0x72, 0x74, 0x4b, 0x65, 0x72, 0x6e, 0x65, 0x6c, 0x12, 0x13, 0x2e, 0x67, 0x61, 0x74, 0x65,
	0x77, 0x61, 0x79, 0x2e, 0x4b, 0x65, 0x72, 0x6e, 0x65, 0x6c, 0x53, 0x70, 0x65, 0x63, 0x1a, 0x1d,
	0x2e, 0x67, 0x61, 0x74, 0x65, 0x77, 0x61, 0x79, 0x2e, 0x4b, 0x65, 0x72, 0x6e, 0x65, 0x6c, 0x43,
	0x6f, 0x6e, 0x6e, 0x65, 0x63, 0x74, 0x69, 0x6f, 0x6e, 0x49, 0x6e, 0x66, 0x6f, 0x22, 0x00, 0x12,
	0x51, 0x0a, 0x12, 0x53, 0x74, 0x61, 0x72, 0x74, 0x4b, 0x65, 0x72, 0x6e, 0x65, 0x6c, 0x52, 0x65,
	0x70, 0x6c, 0x69, 0x63, 0x61, 0x12, 0x1a, 0x2e, 0x67, 0x61, 0x74, 0x65, 0x77, 0x61, 0x79, 0x2e,
	0x4b, 0x65, 0x72, 0x6e, 0x65, 0x6c, 0x52, 0x65, 0x70, 0x6c, 0x69, 0x63, 0x61, 0x53, 0x70, 0x65,
	0x63, 0x1a, 0x1d, 0x2e, 0x67, 0x61, 0x74, 0x65, 0x77, 0x61, 0x79, 0x2e, 0x4b, 0x65, 0x72, 0x6e,
	0x65, 0x6c, 0x43, 0x6f, 0x6e, 0x6e, 0x65, 0x63, 0x74, 0x69, 0x6f, 0x6e, 0x49, 0x6e, 0x66, 0x6f,
	0x22, 0x00, 0x12, 0x3d, 0x0a, 0x0f, 0x47, 0x65, 0x74, 0x4b, 0x65, 0x72, 0x6e, 0x65, 0x6c, 0x53,
	0x74, 0x61, 0x74, 0x75, 0x73, 0x12, 0x11, 0x2e, 0x67, 0x61, 0x74, 0x65, 0x77, 0x61, 0x79, 0x2e,
	0x4b, 0x65, 0x72, 0x6e, 0x65, 0x6c, 0x49, 0x64, 0x1a, 0x15, 0x2e, 0x67, 0x61, 0x74, 0x65, 0x77,
	0x61, 0x79, 0x2e, 0x4b, 0x65, 0x72, 0x6e, 0x65, 0x6c, 0x53, 0x74, 0x61, 0x74, 0x75, 0x73, 0x22,
	0x00, 0x12, 0x30, 0x0a, 0x0a, 0x4b, 0x69, 0x6c, 0x6c, 0x4b, 0x65, 0x72, 0x6e, 0x65, 0x6c, 0x12,
	0x11, 0x2e, 0x67, 0x61, 0x74, 0x65, 0x77, 0x61, 0x79, 0x2e, 0x4b, 0x65, 0x72, 0x6e, 0x65, 0x6c,
	0x49, 0x64, 0x1a, 0x0d, 0x2e, 0x67, 0x61, 0x74, 0x65, 0x77, 0x61, 0x79, 0x2e, 0x56, 0x6f, 0x69,
	0x64, 0x22, 0x00, 0x12, 0x30, 0x0a, 0x0a, 0x53, 0x74, 0x6f, 0x70, 0x4b, 0x65, 0x72, 0x6e, 0x65,
	0x6c, 0x12, 0x11, 0x2e, 0x67, 0x61, 0x74, 0x65, 0x77, 0x61, 0x79, 0x2e, 0x4b, 0x65, 0x72, 0x6e,
	0x65, 0x6c, 0x49, 0x64, 0x1a, 0x0d, 0x2e, 0x67, 0x61, 0x74, 0x65, 0x77, 0x61, 0x79, 0x2e, 0x56,
	0x6f, 0x69, 0x64, 0x22, 0x00, 0x12, 0x38, 0x0a, 0x0a, 0x57, 0x61, 0x69, 0x74, 0x4b, 0x65, 0x72,
	0x6e, 0x65, 0x6c, 0x12, 0x11, 0x2e, 0x67, 0x61, 0x74, 0x65, 0x77, 0x61, 0x79, 0x2e, 0x4b, 0x65,
	0x72, 0x6e, 0x65, 0x6c, 0x49, 0x64, 0x1a, 0x15, 0x2e, 0x67, 0x61, 0x74, 0x65, 0x77, 0x61, 0x79,
	0x2e, 0x4b, 0x65, 0x72, 0x6e, 0x65, 0x6c, 0x53, 0x74, 0x61, 0x74, 0x75, 0x73, 0x22, 0x00, 0x12,
	0x2a, 0x0a, 0x08, 0x53, 0x65, 0x74, 0x43, 0x6c, 0x6f, 0x73, 0x65, 0x12, 0x0d, 0x2e, 0x67, 0x61,
	0x74, 0x65, 0x77, 0x61, 0x79, 0x2e, 0x56, 0x6f, 0x69, 0x64, 0x1a, 0x0d, 0x2e, 0x67, 0x61, 0x74,
	0x65, 0x77, 0x61, 0x79, 0x2e, 0x56, 0x6f, 0x69, 0x64, 0x22, 0x00, 0x12, 0x3b, 0x0a, 0x0a, 0x41,
	0x64, 0x64, 0x52, 0x65, 0x70, 0x6c, 0x69, 0x63, 0x61, 0x12, 0x1c, 0x2e, 0x67, 0x61, 0x74, 0x65,
	0x77, 0x61, 0x79, 0x2e, 0x52, 0x65, 0x70, 0x6c, 0x69, 0x63, 0x61, 0x49, 0x6e, 0x66, 0x6f, 0x57,
	0x69, 0x74, 0x68, 0x41, 0x64, 0x64, 0x72, 0x1a, 0x0d, 0x2e, 0x67, 0x61, 0x74, 0x65, 0x77, 0x61,
	0x79, 0x2e, 0x56, 0x6f, 0x69, 0x64, 0x22, 0x00, 0x12, 0x42, 0x0a, 0x11, 0x55, 0x70, 0x64, 0x61,
	0x74, 0x65, 0x52, 0x65, 0x70, 0x6c, 0x69, 0x63, 0x61, 0x41, 0x64, 0x64, 0x72, 0x12, 0x1c, 0x2e,
	0x67, 0x61, 0x74, 0x65, 0x77, 0x61, 0x79, 0x2e, 0x52, 0x65, 0x70, 0x6c, 0x69, 0x63, 0x61, 0x49,
	0x6e, 0x66, 0x6f, 0x57, 0x69, 0x74, 0x68, 0x41, 0x64, 0x64, 0x72, 0x1a, 0x0d, 0x2e, 0x67, 0x61,
	0x74, 0x65, 0x77, 0x61, 0x79, 0x2e, 0x56, 0x6f, 0x69, 0x64, 0x22, 0x00, 0x12, 0x4d, 0x0a, 0x10,
	0x50, 0x72, 0x65, 0x70, 0x61, 0x72, 0x65, 0x54, 0x6f, 0x4d, 0x69, 0x67, 0x72, 0x61, 0x74, 0x65,
	0x12, 0x14, 0x2e, 0x67, 0x61, 0x74, 0x65, 0x77, 0x61, 0x79, 0x2e, 0x52, 0x65, 0x70, 0x6c, 0x69,
	0x63, 0x61, 0x49, 0x6e, 0x66, 0x6f, 0x1a, 0x21, 0x2e, 0x67, 0x61, 0x74, 0x65, 0x77, 0x61, 0x79,
	0x2e, 0x50, 0x72, 0x65, 0x70, 0x61, 0x72, 0x65, 0x54, 0x6f, 0x4d, 0x69, 0x67, 0x72, 0x61, 0x74,
	0x65, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x22, 0x00, 0x12, 0x2f, 0x0a, 0x0a, 0x47,
	0x65, 0x74, 0x47, 0x70, 0x75, 0x49, 0x6e, 0x66, 0x6f, 0x12, 0x0d, 0x2e, 0x67, 0x61, 0x74, 0x65,
	0x77, 0x61, 0x79, 0x2e, 0x56, 0x6f, 0x69, 0x64, 0x1a, 0x10, 0x2e, 0x67, 0x61, 0x74, 0x65, 0x77,
	0x61, 0x79, 0x2e, 0x47, 0x70, 0x75, 0x49, 0x6e, 0x66, 0x6f, 0x22, 0x00, 0x12, 0x3a, 0x0a, 0x0e,
	0x47, 0x65, 0x74, 0x56, 0x69, 0x72, 0x74, 0x75, 0x61, 0x6c, 0x47, 0x50, 0x55, 0x73, 0x12, 0x0d,
	0x2e, 0x67, 0x61, 0x74, 0x65, 0x77, 0x61, 0x79, 0x2e, 0x56, 0x6f, 0x69, 0x64, 0x1a, 0x17, 0x2e,
	0x67, 0x61, 0x74, 0x65, 0x77, 0x61, 0x79, 0x2e, 0x56, 0x69, 0x72, 0x74, 0x75, 0x61, 0x6c, 0x47,
	0x70, 0x75, 0x49, 0x6e, 0x66, 0x6f, 0x22, 0x00, 0x12, 0x50, 0x0a, 0x13, 0x53, 0x65, 0x74, 0x54,
	0x6f, 0x74, 0x61, 0x6c, 0x56, 0x69, 0x72, 0x74, 0x75, 0x61, 0x6c, 0x47, 0x50, 0x55, 0x73, 0x12,
	0x1e, 0x2e, 0x67, 0x61, 0x74, 0x65, 0x77, 0x61, 0x79, 0x2e, 0x53, 0x65, 0x74, 0x56, 0x69, 0x72,
	0x74, 0x75, 0x61, 0x6c, 0x47, 0x50, 0x55, 0x73, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x1a,
	0x17, 0x2e, 0x67, 0x61, 0x74, 0x65, 0x77, 0x61, 0x79, 0x2e, 0x56, 0x69, 0x72, 0x74, 0x75, 0x61,
	0x6c, 0x47, 0x70, 0x75, 0x49, 0x6e, 0x66, 0x6f, 0x22, 0x00, 0x12, 0x4b, 0x0a, 0x18, 0x47, 0x65,
	0x74, 0x56, 0x69, 0x72, 0x74, 0x75, 0x61, 0x6c, 0x47, 0x70, 0x75, 0x41, 0x6c, 0x6c, 0x6f, 0x63,
	0x61, 0x74, 0x69, 0x6f, 0x6e, 0x73, 0x12, 0x0d, 0x2e, 0x67, 0x61, 0x74, 0x65, 0x77, 0x61, 0x79,
	0x2e, 0x56, 0x6f, 0x69, 0x64, 0x1a, 0x1e, 0x2e, 0x67, 0x61, 0x74, 0x65, 0x77, 0x61, 0x79, 0x2e,
	0x56, 0x69, 0x72, 0x74, 0x75, 0x61, 0x6c, 0x47, 0x70, 0x75, 0x41, 0x6c, 0x6c, 0x6f, 0x63, 0x61,
	0x74, 0x69, 0x6f, 0x6e, 0x73, 0x22, 0x00, 0x42, 0x82, 0x01, 0x0a, 0x37, 0x63, 0x6f, 0x6d, 0x2e,
	0x67, 0x69, 0x74, 0x68, 0x75, 0x62, 0x2e, 0x7a, 0x68, 0x61, 0x6e, 0x67, 0x6a, 0x79, 0x72, 0x2e,
	0x64, 0x69, 0x73, 0x74, 0x72, 0x69, 0x62, 0x75, 0x74, 0x65, 0x64, 0x2d, 0x6e, 0x6f, 0x74, 0x65,
	0x62, 0x6f, 0x6f, 0x6b, 0x2e, 0x63, 0x6f, 0x6d, 0x6d, 0x6f, 0x6e, 0x2e, 0x67, 0x61, 0x74, 0x65,
	0x77, 0x61, 0x79, 0x42, 0x0c, 0x47, 0x61, 0x74, 0x65, 0x77, 0x61, 0x79, 0x50, 0x72, 0x6f, 0x74,
	0x6f, 0x50, 0x01, 0x5a, 0x37, 0x67, 0x69, 0x74, 0x68, 0x75, 0x62, 0x2e, 0x63, 0x6f, 0x6d, 0x2f,
	0x7a, 0x68, 0x61, 0x6e, 0x67, 0x6a, 0x79, 0x72, 0x2f, 0x64, 0x69, 0x73, 0x74, 0x72, 0x69, 0x62,
	0x75, 0x74, 0x65, 0x64, 0x2d, 0x6e, 0x6f, 0x74, 0x65, 0x62, 0x6f, 0x6f, 0x6b, 0x2f, 0x63, 0x6f,
	0x6d, 0x6d, 0x6f, 0x6e, 0x2f, 0x67, 0x61, 0x74, 0x65, 0x77, 0x61, 0x79, 0x62, 0x06, 0x70, 0x72,
	0x6f, 0x74, 0x6f, 0x33,
}

var (
	file_internal_server_api_proto_gateway_proto_rawDescOnce sync.Once
	file_internal_server_api_proto_gateway_proto_rawDescData = file_internal_server_api_proto_gateway_proto_rawDesc
)

func file_internal_server_api_proto_gateway_proto_rawDescGZIP() []byte {
	file_internal_server_api_proto_gateway_proto_rawDescOnce.Do(func() {
		file_internal_server_api_proto_gateway_proto_rawDescData = protoimpl.X.CompressGZIP(file_internal_server_api_proto_gateway_proto_rawDescData)
	})
	return file_internal_server_api_proto_gateway_proto_rawDescData
}

var file_internal_server_api_proto_gateway_proto_msgTypes = make([]protoimpl.MessageInfo, 29)
var file_internal_server_api_proto_gateway_proto_goTypes = []interface{}{
	(*JupyterKernelReplica)(nil),                   // 0: gateway.JupyterKernelReplica
	(*DistributedJupyterKernel)(nil),               // 1: gateway.DistributedJupyterKernel
	(*ListKernelsResponse)(nil),                    // 2: gateway.ListKernelsResponse
	(*ProvisionerId)(nil),                          // 3: gateway.ProvisionerId
	(*HostSpec)(nil),                               // 4: gateway.HostSpec
	(*HostId)(nil),                                 // 5: gateway.HostId
	(*VirtualGpuAllocations)(nil),                  // 6: gateway.VirtualGpuAllocations
	(*VirtualGpuAllocation)(nil),                   // 7: gateway.VirtualGpuAllocation
	(*SetVirtualGPUsRequest)(nil),                  // 8: gateway.SetVirtualGPUsRequest
	(*VirtualGpuInfo)(nil),                         // 9: gateway.VirtualGpuInfo
	(*GpuInfo)(nil),                                // 10: gateway.GpuInfo
	(*KernelReplicaSpec)(nil),                      // 11: gateway.KernelReplicaSpec
	(*ResourceSpec)(nil),                           // 12: gateway.ResourceSpec
	(*KernelId)(nil),                               // 13: gateway.KernelId
	(*ReplicaInfo)(nil),                            // 14: gateway.ReplicaInfo
	(*MigrationRequest)(nil),                       // 15: gateway.MigrationRequest
	(*SmrReadyNotification)(nil),                   // 16: gateway.SmrReadyNotification
	(*ReplicaId)(nil),                              // 17: gateway.ReplicaId
	(*PrepareToMigrateResponse)(nil),               // 18: gateway.PrepareToMigrateResponse
	(*MigrateKernelResponse)(nil),                  // 19: gateway.MigrateKernelResponse
	(*ReplicaInfoWithAddr)(nil),                    // 20: gateway.ReplicaInfoWithAddr
	(*KernelSpec)(nil),                             // 21: gateway.KernelSpec
	(*KernelConnectionInfo)(nil),                   // 22: gateway.KernelConnectionInfo
	(*KernelRegistrationNotification)(nil),         // 23: gateway.KernelRegistrationNotification
	(*KernelRegistrationNotificationResponse)(nil), // 24: gateway.KernelRegistrationNotificationResponse
	(*KernelStatus)(nil),                           // 25: gateway.KernelStatus
	(*Void)(nil),                                   // 26: gateway.Void
	nil,                                            // 27: gateway.VirtualGpuAllocations.AllocationsEntry
	nil,                                            // 28: gateway.KernelRegistrationNotificationResponse.ReplicasEntry
}
var file_internal_server_api_proto_gateway_proto_depIdxs = []int32{
	0,  // 0: gateway.DistributedJupyterKernel.replicas:type_name -> gateway.JupyterKernelReplica
	1,  // 1: gateway.ListKernelsResponse.kernels:type_name -> gateway.DistributedJupyterKernel
	27, // 2: gateway.VirtualGpuAllocations.allocations:type_name -> gateway.VirtualGpuAllocations.AllocationsEntry
	21, // 3: gateway.KernelReplicaSpec.kernel:type_name -> gateway.KernelSpec
	14, // 4: gateway.MigrationRequest.targetReplica:type_name -> gateway.ReplicaInfo
	12, // 5: gateway.KernelSpec.resource:type_name -> gateway.ResourceSpec
	22, // 6: gateway.KernelRegistrationNotification.connectionInfo:type_name -> gateway.KernelConnectionInfo
	28, // 7: gateway.KernelRegistrationNotificationResponse.replicas:type_name -> gateway.KernelRegistrationNotificationResponse.ReplicasEntry
	7,  // 8: gateway.VirtualGpuAllocations.AllocationsEntry.value:type_name -> gateway.VirtualGpuAllocation
	26, // 9: gateway.ClusterGateway.ID:input_type -> gateway.Void
	5,  // 10: gateway.ClusterGateway.RemoveHost:input_type -> gateway.HostId
	15, // 11: gateway.ClusterGateway.MigrateKernelReplica:input_type -> gateway.MigrationRequest
	23, // 12: gateway.ClusterGateway.NotifyKernelRegistered:input_type -> gateway.KernelRegistrationNotification
	16, // 13: gateway.ClusterGateway.SmrReady:input_type -> gateway.SmrReadyNotification
	14, // 14: gateway.ClusterGateway.SmrNodeAdded:input_type -> gateway.ReplicaInfo
	26, // 15: gateway.ClusterGateway.ListKernels:input_type -> gateway.Void
	5,  // 16: gateway.LocalGateway.SetID:input_type -> gateway.HostId
	21, // 17: gateway.LocalGateway.StartKernel:input_type -> gateway.KernelSpec
	11, // 18: gateway.LocalGateway.StartKernelReplica:input_type -> gateway.KernelReplicaSpec
	13, // 19: gateway.LocalGateway.GetKernelStatus:input_type -> gateway.KernelId
	13, // 20: gateway.LocalGateway.KillKernel:input_type -> gateway.KernelId
	13, // 21: gateway.LocalGateway.StopKernel:input_type -> gateway.KernelId
	13, // 22: gateway.LocalGateway.WaitKernel:input_type -> gateway.KernelId
	26, // 23: gateway.LocalGateway.SetClose:input_type -> gateway.Void
	20, // 24: gateway.LocalGateway.AddReplica:input_type -> gateway.ReplicaInfoWithAddr
	20, // 25: gateway.LocalGateway.UpdateReplicaAddr:input_type -> gateway.ReplicaInfoWithAddr
	14, // 26: gateway.LocalGateway.PrepareToMigrate:input_type -> gateway.ReplicaInfo
	26, // 27: gateway.LocalGateway.GetGpuInfo:input_type -> gateway.Void
	26, // 28: gateway.LocalGateway.GetVirtualGPUs:input_type -> gateway.Void
	8,  // 29: gateway.LocalGateway.SetTotalVirtualGPUs:input_type -> gateway.SetVirtualGPUsRequest
	26, // 30: gateway.LocalGateway.GetVirtualGpuAllocations:input_type -> gateway.Void
	3,  // 31: gateway.ClusterGateway.ID:output_type -> gateway.ProvisionerId
	26, // 32: gateway.ClusterGateway.RemoveHost:output_type -> gateway.Void
	19, // 33: gateway.ClusterGateway.MigrateKernelReplica:output_type -> gateway.MigrateKernelResponse
	24, // 34: gateway.ClusterGateway.NotifyKernelRegistered:output_type -> gateway.KernelRegistrationNotificationResponse
	26, // 35: gateway.ClusterGateway.SmrReady:output_type -> gateway.Void
	26, // 36: gateway.ClusterGateway.SmrNodeAdded:output_type -> gateway.Void
	2,  // 37: gateway.ClusterGateway.ListKernels:output_type -> gateway.ListKernelsResponse
	5,  // 38: gateway.LocalGateway.SetID:output_type -> gateway.HostId
	22, // 39: gateway.LocalGateway.StartKernel:output_type -> gateway.KernelConnectionInfo
	22, // 40: gateway.LocalGateway.StartKernelReplica:output_type -> gateway.KernelConnectionInfo
	25, // 41: gateway.LocalGateway.GetKernelStatus:output_type -> gateway.KernelStatus
	26, // 42: gateway.LocalGateway.KillKernel:output_type -> gateway.Void
	26, // 43: gateway.LocalGateway.StopKernel:output_type -> gateway.Void
	25, // 44: gateway.LocalGateway.WaitKernel:output_type -> gateway.KernelStatus
	26, // 45: gateway.LocalGateway.SetClose:output_type -> gateway.Void
	26, // 46: gateway.LocalGateway.AddReplica:output_type -> gateway.Void
	26, // 47: gateway.LocalGateway.UpdateReplicaAddr:output_type -> gateway.Void
	18, // 48: gateway.LocalGateway.PrepareToMigrate:output_type -> gateway.PrepareToMigrateResponse
	10, // 49: gateway.LocalGateway.GetGpuInfo:output_type -> gateway.GpuInfo
	9,  // 50: gateway.LocalGateway.GetVirtualGPUs:output_type -> gateway.VirtualGpuInfo
	9,  // 51: gateway.LocalGateway.SetTotalVirtualGPUs:output_type -> gateway.VirtualGpuInfo
	6,  // 52: gateway.LocalGateway.GetVirtualGpuAllocations:output_type -> gateway.VirtualGpuAllocations
	31, // [31:53] is the sub-list for method output_type
	9,  // [9:31] is the sub-list for method input_type
	9,  // [9:9] is the sub-list for extension type_name
	9,  // [9:9] is the sub-list for extension extendee
	0,  // [0:9] is the sub-list for field type_name
}

func init() { file_internal_server_api_proto_gateway_proto_init() }
func file_internal_server_api_proto_gateway_proto_init() {
	if File_internal_server_api_proto_gateway_proto != nil {
		return
	}
	if !protoimpl.UnsafeEnabled {
		file_internal_server_api_proto_gateway_proto_msgTypes[0].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*JupyterKernelReplica); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_internal_server_api_proto_gateway_proto_msgTypes[1].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*DistributedJupyterKernel); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_internal_server_api_proto_gateway_proto_msgTypes[2].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*ListKernelsResponse); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_internal_server_api_proto_gateway_proto_msgTypes[3].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*ProvisionerId); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_internal_server_api_proto_gateway_proto_msgTypes[4].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*HostSpec); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_internal_server_api_proto_gateway_proto_msgTypes[5].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*HostId); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_internal_server_api_proto_gateway_proto_msgTypes[6].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*VirtualGpuAllocations); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_internal_server_api_proto_gateway_proto_msgTypes[7].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*VirtualGpuAllocation); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_internal_server_api_proto_gateway_proto_msgTypes[8].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*SetVirtualGPUsRequest); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_internal_server_api_proto_gateway_proto_msgTypes[9].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*VirtualGpuInfo); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_internal_server_api_proto_gateway_proto_msgTypes[10].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*GpuInfo); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_internal_server_api_proto_gateway_proto_msgTypes[11].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*KernelReplicaSpec); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_internal_server_api_proto_gateway_proto_msgTypes[12].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*ResourceSpec); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_internal_server_api_proto_gateway_proto_msgTypes[13].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*KernelId); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_internal_server_api_proto_gateway_proto_msgTypes[14].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*ReplicaInfo); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_internal_server_api_proto_gateway_proto_msgTypes[15].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*MigrationRequest); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_internal_server_api_proto_gateway_proto_msgTypes[16].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*SmrReadyNotification); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_internal_server_api_proto_gateway_proto_msgTypes[17].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*ReplicaId); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_internal_server_api_proto_gateway_proto_msgTypes[18].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*PrepareToMigrateResponse); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_internal_server_api_proto_gateway_proto_msgTypes[19].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*MigrateKernelResponse); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_internal_server_api_proto_gateway_proto_msgTypes[20].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*ReplicaInfoWithAddr); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_internal_server_api_proto_gateway_proto_msgTypes[21].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*KernelSpec); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_internal_server_api_proto_gateway_proto_msgTypes[22].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*KernelConnectionInfo); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_internal_server_api_proto_gateway_proto_msgTypes[23].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*KernelRegistrationNotification); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_internal_server_api_proto_gateway_proto_msgTypes[24].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*KernelRegistrationNotificationResponse); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_internal_server_api_proto_gateway_proto_msgTypes[25].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*KernelStatus); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_internal_server_api_proto_gateway_proto_msgTypes[26].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*Void); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
	}
	file_internal_server_api_proto_gateway_proto_msgTypes[11].OneofWrappers = []interface{}{}
	file_internal_server_api_proto_gateway_proto_msgTypes[13].OneofWrappers = []interface{}{}
	file_internal_server_api_proto_gateway_proto_msgTypes[15].OneofWrappers = []interface{}{}
	file_internal_server_api_proto_gateway_proto_msgTypes[24].OneofWrappers = []interface{}{}
	type x struct{}
	out := protoimpl.TypeBuilder{
		File: protoimpl.DescBuilder{
			GoPackagePath: reflect.TypeOf(x{}).PkgPath(),
			RawDescriptor: file_internal_server_api_proto_gateway_proto_rawDesc,
			NumEnums:      0,
			NumMessages:   29,
			NumExtensions: 0,
			NumServices:   2,
		},
		GoTypes:           file_internal_server_api_proto_gateway_proto_goTypes,
		DependencyIndexes: file_internal_server_api_proto_gateway_proto_depIdxs,
		MessageInfos:      file_internal_server_api_proto_gateway_proto_msgTypes,
	}.Build()
	File_internal_server_api_proto_gateway_proto = out.File
	file_internal_server_api_proto_gateway_proto_rawDesc = nil
	file_internal_server_api_proto_gateway_proto_goTypes = nil
	file_internal_server_api_proto_gateway_proto_depIdxs = nil
}
